{
  "stats": {
    "suites": 119,
    "tests": 100,
    "passes": 100,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-08T17:08:59.767Z",
    "end": "2019-09-08T17:09:11.754Z",
    "duration": 11987,
    "testsRegistered": 100,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e6d20433-dae9-4b0c-aa1d-1043f36ac72e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "fdf5d2c9-56be-4673-8752-76bb79d61562",
        "title": "main-api",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "1db0ec41-5ede-4f7a-bcba-44602e54b9d4",
            "title": "GET /api/checkAgent",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkAgent should return 200",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkAgent') )\n\t\t\t.then( (res) => {\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.status, 0);\n\t\t\t\tassert.strictEqual(typeof res.body.version, 'string');\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ecb5d9b5-25a9-470d-8800-65ca7d27a363",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ecb5d9b5-25a9-470d-8800-65ca7d27a363"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 12,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7d0d6b25-74d1-4c63-a1cb-c42947aac3ca",
            "title": "GET /api/checkPort",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkPort should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkPort?port='+PORT+'&host='+HOST) )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.result, true);\n\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "407f19af-14c5-4a3a-9053-e8d50c0474c7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "407f19af-14c5-4a3a-9053-e8d50c0474c7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "41207c60-cb89-41f8-bd81-4bbb304031c8",
            "title": "GET /api/admin/os/cpus",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/admin/os/cpus should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/admin/os/cpus') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body), true, 'body is array')\t\t\n\t\t\t\tassert.strictEqual(res.body.length > 0, true, 'result is empty')\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "5aed3223-04f9-4c6a-8517-0ec884cc1c29",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5aed3223-04f9-4c6a-8517-0ec884cc1c29"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ce9b41d4-4b6c-4783-8673-6bc79878027e",
            "title": "POST /api/getConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/getConfig should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('POST', '/api/getConfig') )\n.then( (res) => {\t\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tconfData = res.body.data\n\tdone()\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "e4ee3f30-3abc-41aa-8489-ed11fa2fae45",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e4ee3f30-3abc-41aa-8489-ed11fa2fae45"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cd65f265-a950-45d0-9cec-0bdf2f1753ae",
            "title": "POST /api/setConfig without data",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data should return 400",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {}\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "159b2966-870c-4c37-96d3-7520a87cb31a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "159b2966-870c-4c37-96d3-7520a87cb31a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5db9b17c-7fb6-40cc-9045-2710d8fd3056",
            "title": "POST /api/setConfig without data.getConfig()",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data.getConfig() should return 400",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: '{}'\n}\n\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "eba7a594-43a5-460a-991c-dd5556fabbc8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "eba7a594-43a5-460a-991c-dd5556fabbc8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d0ad8388-16f1-4f7c-8f5b-c1d0d39b2b03",
            "title": "POST /api/setConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/setConfig should return 200",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: confData\n}\n\nrequest( updateOpt )\n.then( (res) => {\t\n\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tdone()\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "d40a6ad8-b80b-4f0f-b96d-ef4787dd9772",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d40a6ad8-b80b-4f0f-b96d-ef4787dd9772"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "649eff29-0c4e-4770-8cdf-2ecdacf6e564",
        "title": "plugin-dns",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0b9a1155-7f8d-4345-bcce-f93bd494ca0a",
            "title": "GET /_plugin/dns/dnsReverse",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "44511b5e-40fc-4687-a728-9ceb9913c929",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "44511b5e-40fc-4687-a728-9ceb9913c929"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9d00df41-38d3-44ef-b106-e6738af87cdc",
            "title": "GET /_plugin/dns/dnsReverse",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse should return 200",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "f456bf05-71d7-4feb-bf5e-60d17e74d95f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f456bf05-71d7-4feb-bf5e-60d17e74d95f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "71bdf70e-ec44-45a2-a9a6-3b4dca966f4a",
            "title": "GET /_plugin/dns/dnsReverse (no result)",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse (no result) should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=0.0.0.0') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '0.0.0.0')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, [] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "deeda33a-732c-4afe-8990-cbbfbdd52060",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "deeda33a-732c-4afe-8990-cbbfbdd52060"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a81504e0-01a7-4ed3-b418-41df61f0f774",
        "title": "GET /_plugin/filesystem",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/filesystem should return 404",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "fa253531-bac6-49ae-8109-8eda9d68e31b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fa253531-bac6-49ae-8109-8eda9d68e31b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3221d8dd-dc1f-4f3c-88d7-2c37105c33ce",
        "title": "/_plugin/filesystem/moveFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c18f2f28-a04b-4820-a22e-2d53757cfae1",
            "title": "POST /moveFile no path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no path should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "f7bae2ab-84b8-4a45-b302-99d94f83c5ce",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f7bae2ab-84b8-4a45-b302-99d94f83c5ce"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "33d93b87-97e4-4013-be3c-c2d8ca3b9c76",
            "title": "POST /moveFile no dest",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no dest should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/testmove1.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: path\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "21af16cd-7bba-4068-82a5-d69926ed9f86",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "21af16cd-7bba-4068-82a5-d69926ed9f86"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7156126a-9a11-435f-a96a-554ff0795fb2",
            "title": "POST /moveFile to directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 - dest is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile to directory should return 400 - dest is directory",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "11d832e4-3f86-4280-a842-2b2a929a61a5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "11d832e4-3f86-4280-a842-2b2a929a61a5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "19140528-d243-4b06-9100-c26977600f33",
            "title": "POST /moveFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile dest directory does not exists should return error",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.unlinkSync(tmpDir+'/blablabla')\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "ee8ae79b-be37-436c-89cc-d36021585ebf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ee8ae79b-be37-436c-89cc-d36021585ebf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d10e50c9-01c8-4f54-b6be-5813d5d42d46",
            "title": "POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt should return 200",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5d19b31d-de78-43d4-98a7-23e6e90bdfb1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5d19b31d-de78-43d4-98a7-23e6e90bdfb1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9a70d8fc-fa82-499d-860a-f6f6047117e0",
            "title": "POST /moveFile - dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "22275240-a93c-4f5e-b899-8fc6e3724de9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "22275240-a93c-4f5e-b899-8fc6e3724de9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d97683b5-70de-45f9-84a7-b18ecbf449d4",
            "title": "POST /moveFile - dest already exists - overwrite=true",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists - overwrite=true should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest,\n\toverwrite: true\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "db7c4879-d72a-4d80-9014-e035c210f247",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "db7c4879-d72a-4d80-9014-e035c210f247"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f113b05d-d1e2-4233-82ff-56b3c1179baa",
            "title": "POST /moveFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "8827a33a-b912-45aa-a736-b01a85135046",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8827a33a-b912-45aa-a736-b01a85135046"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "73c32a7b-8506-4407-a4ff-639a9af34e25",
        "title": "/_plugin/filesystem/copyFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "fb2cf517-badf-4b9e-8135-3b497734eb8e",
            "title": "POST /copyFile dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest is directory should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "6f08588c-0e88-4c2b-b631-78db9e1d45f1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6f08588c-0e88-4c2b-b631-78db9e1d45f1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ccf340b8-cc7d-4428-b7a8-0c9b8730d141",
            "title": "POST /copyFile dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest already exists should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nif (!fs.pathExistsSync(dest))\n\tfs.writeFileSync(dest, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\t\t\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "9a5783c7-af94-4deb-bccc-96d477f3e80f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9a5783c7-af94-4deb-bccc-96d477f3e80f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8e31335f-4cc4-4aa8-a42d-fb80cd4f252e",
            "title": "POST /copyFile path does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path does not exists should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceDir+'/blablabla'\nlet dest = tmpDir+'/blablabla'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "5eafc6fb-daed-4c63-9e28-ca2ad1cd1060",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5eafc6fb-daed-4c63-9e28-ca2ad1cd1060"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5da3b32d-0b78-49b5-a9d7-466b38a655c2",
            "title": "POST /copyFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest directory does not exists should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.removeSync(tmpDir+'/blablabla')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "f0cd6253-944e-4941-9b95-5d4a3a33c0e9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f0cd6253-944e-4941-9b95-5d4a3a33c0e9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5914107d-e687-4717-bcd3-60a955c19ce3",
            "title": "POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "7606ebc4-dd60-47f4-bc7e-32c363174a08",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7606ebc4-dd60-47f4-bc7e-32c363174a08"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d30e7718-8c62-4bcf-93dc-d94a8e7dfbd3",
            "title": "POST /copyFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\n\t\t\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "f6e2e1aa-aad3-48fa-9e99-312a1169c536",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f6e2e1aa-aad3-48fa-9e99-312a1169c536"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d10de56d-98c5-4242-b2ac-efb946481828",
        "title": "/_plugin/filesystem/fileinfo",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "91832c6d-8605-4eed-a7a0-8d7b5c383920",
            "title": "GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.name, 'index.js');\n\tassert.strictEqual(res.body.contentType.contains('application/javascript'), true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "54e80e08-a5bd-4d53-8910-f38882b31b2b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "54e80e08-a5bd-4d53-8910-f38882b31b2b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "350981b6-dd16-4d10-bf45-606240f47a6e",
            "title": "GET /fileinfo path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path=blablabla')\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "cc94a5a6-ff10-439c-a7d4-bad820b57c8b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cc94a5a6-ff10-439c-a7d4-bad820b57c8b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "896a2817-3996-4b0d-ae3c-0698526ccb3c",
            "title": "GET /fileinfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "47bb54a9-2d79-45eb-b434-52bcc24f7063",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "47bb54a9-2d79-45eb-b434-52bcc24f7063"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3fd698d7-040f-4741-84b4-b06703e8f72f",
        "title": "/_plugin/filesystem/fileExists",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7ad8cf96-a0fb-497c-802b-f0a9a118f245",
            "title": "GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "cdbe5b94-acba-4d2a-915b-ecdc8612fc8a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cdbe5b94-acba-4d2a-915b-ecdc8612fc8a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "712a3eac-a3fb-42a5-9221-500ebab89306",
            "title": "GET /fileExists path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path=blablabla')\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, false);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "321d8907-82c1-4c06-94ac-0226e7204ab8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "321d8907-82c1-4c06-94ac-0226e7204ab8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ad76f545-5793-431d-9ecf-93e92044748f",
            "title": "GET /fileExists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "77ceed7f-cc38-4b04-8af9-85d8ebda6d63",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "77ceed7f-cc38-4b04-8af9-85d8ebda6d63"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fa36fac8-c9b2-439d-8dd2-fe878a7f99ca",
        "title": "/_plugin/filesystem/execScript",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "58a4af0b-bd37-4f1d-a48c-0aa86f73684c",
            "title": "POST execScript type=shell",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=shell should return 200",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\"\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "00141d34-8acd-4e73-8eda-1cd5adb03325",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "00141d34-8acd-4e73-8eda-1cd5adb03325"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 23,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9eba4eac-9d2c-487b-b041-f4b9fcaee023",
            "title": "POST execScript type=blabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error 400",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=blabla should return error 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\",\n\ttype: 'blabla'\n}\nexecRequestExpectError(opt, done, 412)",
                "err": {},
                "isRoot": false,
                "uuid": "dfeccfd9-9908-482d-9c68-3e5c42f86ba9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dfeccfd9-9908-482d-9c68-3e5c42f86ba9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5112787a-f3fa-4548-9819-81a7bbe9b6b0",
            "title": "POST execScript type=javascript with result",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result should return 200",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5c67af68-74fa-4385-9419-488ca788c947",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5c67af68-74fa-4385-9419-488ca788c947"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "39a13203-9515-41ef-9b53-6cea9dd323ae",
            "title": "POST execScript type=javascript with result && exitCode",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result && exitCode should return 200",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\\nexitCode=2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 2);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "1673cc0b-02cd-456f-8056-384bff01685d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1673cc0b-02cd-456f-8056-384bff01685d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "24a471e4-82a3-4dd8-9491-64d802e3cd8d",
            "title": "POST execScript type=javascript with syntax error",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with syntax error should return 500",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"blabla\",\n\ttype: 'javascript'\n}\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "b420e39e-22d6-4b4c-8c66-851e52c78296",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b420e39e-22d6-4b4c-8c66-851e52c78296"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "109fe568-7b99-4eaa-902f-910b96f07dbe",
        "title": "/_plugin/filesystem/writeTextFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "4476b9cb-ab9d-4a6d-b652-160a2d0157b8",
            "title": "POST /_plugin/filesystem/writeTextFile",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST /_plugin/filesystem/writeTextFile should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\trequest( opt )\n\t\t\t.then( (res) => {\t\n\t\t\nassert.strictEqual(res.statusCode, 200);\nassert.strictEqual(typeof res.body, 'object');\nassert.strictEqual(typeof res.body.path, 'string');\nassert.strictEqual(res.body.result, true);\ndone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\ndone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "e3ddf22e-1e51-4f5f-bf67-b58dd188dcf3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e3ddf22e-1e51-4f5f-bf67-b58dd188dcf3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a52dff58-5a62-42b0-8b03-d97bb13fe830",
            "title": "POST writeTextFile, path does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST writeTextFile, path does not exist should return 500",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/blabla/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\texecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "1c1e492a-c71b-49ad-8e96-023f7866d8ee",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1c1e492a-c71b-49ad-8e96-023f7866d8ee"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "cb197eca-6b6a-4dd1-8bf9-f9ee65828b54",
        "title": "/_plugin/filesystem/list",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f7653f70-1d64-44a0-9882-2464a2389932",
            "title": "GET path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 23);\n\tassert.strictEqual(res.body.files.length, 23);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "ce74c46c-0999-4755-b1fb-14ff69a6c358",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ce74c46c-0999-4755-b1fb-14ff69a6c358"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "39b8c216-31bc-4d7e-9d0d-47ad4adc27fb",
            "title": "GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 33,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 236);\n\tassert.strictEqual(res.body.files.length, 236);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "60c4bbb2-7c1a-4ee2-8353-f6104ec26c34",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "60c4bbb2-7c1a-4ee2-8353-f6104ec26c34"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 33,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "def80533-d55a-452a-a99f-3c1cb4b585fc",
            "title": "GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&filter=*.js&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 70);\n\tassert.strictEqual(res.body.files.length, 70);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "8bbfb754-65bc-447b-ba50-18738d81b730",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8bbfb754-65bc-447b-ba50-18738d81b730"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 30,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cea2b126-1bf9-45d4-a09e-227859f91d67",
            "title": "GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&maxResults=10&filter=*.ts&path='+sourceDir\n\trequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object');\n\t\tassert.strictEqual(typeof res.body.files, 'object');\n\t\tassert.strictEqual(typeof res.body.files.push, 'function');\n\t\tassert.strictEqual(res.body.total, 70);\n\t\tassert.strictEqual(res.body.files.length, 10);\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "54b83f78-cb2f-4b08-9c2e-a8a5e010cd6a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "54b83f78-cb2f-4b08-9c2e-a8a5e010cd6a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 25,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ae9fe28e-3985-4832-abe4-fe762678544a",
            "title": "GET recursive=true&path=/blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=/blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path=/blablabla'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/list?'+query)\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "1d2fa9d4-4105-4421-a4e9-dd306198614e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1d2fa9d4-4105-4421-a4e9-dd306198614e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e760ec07-4691-42ac-8a73-5c279c18b095",
        "title": "/_plugin/filesystem/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "ea8ea07f-8a13-4ec8-ad42-4edc136c284c",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/upload upload file should return 200",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\t//console.log( res.body)\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object', 'body is not object');\n\t\tassert.strictEqual(typeof res.body.file, 'object', 'body.file is not object');\t\t\t\t\n\t\tassert.strictEqual(res.body.path, path, 'body.path != '+path);\n\t\tassert.strictEqual(fs.pathExistsSync(path), true, 'uploaded file does not exists');\n\t\tassert.strictEqual(fs.statSync(path).size != 0, true, 'uploaded file size != 0');\n\t\t\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ec2bba91-4045-472e-a539-e2aead0c179d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ec2bba91-4045-472e-a539-e2aead0c179d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 77,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "45ac5800-bbe7-4250-8d08-4be03fab1abd",
            "title": "upload no file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload no file should return error",
                "timedOut": false,
                "duration": 65,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload2.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        name: sourceFileName,\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "692b643e-c365-4e5c-a00a-bbdc3d15bef8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "692b643e-c365-4e5c-a00a-bbdc3d15bef8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 65,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "debcbf70-c218-4592-8750-ffd9e99b2aa0",
            "title": "upload file - dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest is a directory)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest is directory should return 400 (dest is a directory)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "5cda3828-d780-4526-ac5e-9631afac56a0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5cda3828-d780-4526-ac5e-9631afac56a0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0186ad62-a624-4467-90cc-a27d67220bc2",
            "title": "upload file - dest directory does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest a directory does not exist)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest directory does not exist should return 400 (dest a directory does not exist)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/uploadblablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "0604f431-c3dc-4203-97a9-7fb0453f211e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0604f431-c3dc-4203-97a9-7fb0453f211e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "53a9a3b4-eea4-4556-867b-621f1897039c",
            "title": "upload existing file - overwrite=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload existing file - overwrite=false should return error",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path+'&overwrite=false')\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "c8d2bed7-60bb-45c2-8d14-8f65d6fe43fd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c8d2bed7-60bb-45c2-8d14-8f65d6fe43fd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d7a2b99b-efd7-4a81-a666-4e52167090ae",
        "title": "/_plugin/filesystem/deleteFiles",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "70e91f33-e47e-46bb-8ba5-f58653270673",
            "title": "delete existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete existing file should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nfs.writeFileSync(path, 'test')\n\t\t\nrequest( opt )\n.then( (res) => {\t\n\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(fs.pathExistsSync(path), false);\n\tassert.strictEqual(res.body.result, true);\n\tassert.strictEqual(typeof res.body.filename, 'string');\n\tassert.strictEqual(res.body.path, path);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a40a73db-023c-4706-af4a-7755ea4df5db",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a40a73db-023c-4706-af4a-7755ea4df5db"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "111523f5-9a48-472c-93ab-0f058a59843f",
            "title": "delete not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete not existing file should return 404",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nif (fs.pathExistsSync(path))\n\tfs.unlinkSync(path)\n\t\t\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "12ea2877-2226-486b-aa13-4688dbc77572",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "12ea2877-2226-486b-aa13-4688dbc77572"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "26047421-b16d-43c9-9b77-537792100aeb",
        "title": "/_plugin/filesystem/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "36d7e509-8049-4738-bdbf-5305f05a004a",
            "title": "Download existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/javascript; charset=UTF-8');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');\n\tassert.strictEqual(res.headers['content-length'] > 0 , true, 'content-type > 0');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "94856e33-9451-4a74-94a4-faaa75f4e4a7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "94856e33-9451-4a74-94a4-faaa75f4e4a7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cd873932-2e2c-46f3-872a-9e3760f34c2e",
            "title": "Download existing file - compress=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file - compress=false should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'&compress=false'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\t/*assert.strictEqual(res.headers['content-type'], 'application/javascript');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');*/\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "13f3a7b8-33da-454b-a554-3fa6cbb968a3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "13f3a7b8-33da-454b-a554-3fa6cbb968a3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c62752f0-8f4d-46ea-9ec7-3ace989d41ee",
            "title": "Download file - file does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/download Download file - file does not exists should return 404",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'/balbalba'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "673151d3-5653-431e-9da8-f040d7c364a0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "673151d3-5653-431e-9da8-f040d7c364a0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "aa38dd16-628c-4dbb-b050-f3db74d99d0f",
            "title": "Download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download directory should return 200",
                "timedOut": false,
                "duration": 450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceDir\nlet dest = tmpDir+'/downloadZip.zip'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet destFileStream = fs.createWriteStream(dest);\nrequest( opt , (error, res, body) => {\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/zip');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"dist.zip\"');\t\t\n})\n.pipe(destFileStream)\n\t\t    .on('finish', () => {\n\n\t\t    \tif (fs.pathExistsSync(dest) && (fs.statSync(dest).size > 0))\n\t\t       \t\tdone();\t\t \t      \n\t\t       \telse\n\t\t       \t\tdone('Downloaded file does not exists or is empty');\t\t \t      \n\t\t    })\n\t\t    .on('error', (error) => {\n\t\t        done(error);\n\t\t    })",
                "err": {},
                "isRoot": false,
                "uuid": "8d468fa2-c4ab-43d2-878d-00267ffea512",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8d468fa2-c4ab-43d2-878d-00267ffea512"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 450,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e8ad92cf-960f-4ef6-8687-ffd2bc4e5a46",
        "title": "plugin-http",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "87bdb827-a9c4-48c4-b0de-f8132c4787e7",
            "title": "POST /_plugin/http/request",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-http POST /_plugin/http/request should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.body, 'object');\n\tassert.strictEqual(res.body.body.status, 0);\n\texpect(res.body.status).to.equal(200);\n\tassert.strictEqual(typeof res.body.body.version, 'string');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4f65e989-aa30-40c4-8e22-58e00a732881",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4f65e989-aa30-40c4-8e22-58e00a732881"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "bc860084-d64a-49ac-bdba-3e236d42ee8c",
            "title": "POST /_plugin/http/request to unkown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown host should return 200 - content is error",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+'blablabla:'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, true);\n\tassert.strictEqual(typeof res.body.error !== 'undefined', true);\n\tassert.strictEqual(res.body.status, null);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "ce09f9d6-d6e3-418c-9558-c6e4c20540ef",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ce09f9d6-d6e3-418c-9558-c6e4c20540ef"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 21,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "78086852-bc5e-461c-83f0-cb6f0e1df911",
            "title": "POST /_plugin/http/request to unkown url",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error 404",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown url should return 200 - content is error 404",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgentBLABLABLA',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, false);\n\tassert.strictEqual(res.body.error, null);\n\tassert.strictEqual(res.body.status, 404);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a14cd181-6dcf-46d2-92f1-808f6cb57110",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a14cd181-6dcf-46d2-92f1-808f6cb57110"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e5c6955c-4058-457d-9dc1-610385c50062",
        "title": "plugin-metrics",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "a0ea96b7-dcac-4ecd-8dbd-e2fcbb12b0f1",
            "title": "GET metrics getInfos",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics getInfos should return object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual( _.isArray(res.body.metrics) , true, 'body.metrics is not array')\t\t\n\t\t\t\tassert.strictEqual( res.body.metrics.length , 5, 'body.metrics length is not 5')\t\t\n\t\t\t\tlet cpuMetric =  res.body.metrics[0]\n\t\t\t\tassert.strictEqual( cpuMetric.name , 'cpu')\t\t\t\n\t\t\t\tassert.strictEqual( cpuMetric.url , 'http://'+HOST+':'+PORT+'/_plugin/metrics/cpu')\t\t\t\n\t\t\t\tassert.strictEqual( _.isArray(cpuMetric.args) , true, 'body.metrics[0].args is not array')\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "0949b822-50e3-472b-a779-35f703680942",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0949b822-50e3-472b-a779-35f703680942"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9c77a8f1-c7b3-468a-a9bb-9f8caf5de15e",
            "title": "GET metrics systemInfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics systemInfo should return object",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.release == 'string', true, \"'release' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.uptime == 'number', true, \"'uptime' property is not number'\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.osType == 'string', true, \"'osType' property is not number'\")\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "49957cd8-b571-4b67-89e2-bcdb58a1a1fc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "49957cd8-b571-4b67-89e2-bcdb58a1a1fc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 16,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "04e748e7-6b36-41e2-986e-39fd2e2a770d",
            "title": "GET metrics systemInfo format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics systemInfo format=nagios should return string",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 0 )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "c865d497-3e6d-4e57-a15f-ffa256aed8fe",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c865d497-3e6d-4e57-a15f-ffa256aed8fe"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9e35b5fb-5930-41f9-8bfb-2a5c9f99f76e",
            "title": "GET metrics cpu",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics cpu should return object",
                "timedOut": false,
                "duration": 1006,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.ellapsed == 'number', true, \"'ellapsed' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.percentageCPU == 'number', true, \"'percentageCPU' property is not number'\")\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "d0be9397-8c68-4294-93b6-35bb19b43ede",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d0be9397-8c68-4294-93b6-35bb19b43ede"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "40c2a4d1-6655-4fc9-a4a4-65552c29ed2c",
            "title": "GET metrics cpu format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics cpu format=nagios should return string",
                "timedOut": false,
                "duration": 1006,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6940f7ce-4940-4bb4-b5ca-f25b115a5da7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6940f7ce-4940-4bb4-b5ca-f25b115a5da7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b4e36ee7-1a2e-41e8-9770-af2d0f3bc6fa",
            "title": "GET metrics cpu warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics cpu warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1007,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=10&critic=5&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 3 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "9de1056f-f04b-4106-85f1-3ff2f539ebed",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9de1056f-f04b-4106-85f1-3ff2f539ebed"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1007,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f4af13b7-ad9d-4e96-b5df-a0fdf9a3b2ef",
            "title": "GET metrics cpu warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1010,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "f5052b15-4bc4-4b04-9af9-af4d66886c83",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f5052b15-4bc4-4b04-9af9-af4d66886c83"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1010,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9fbdd231-7d94-470b-ae6c-f2bd42864efc",
            "title": "GET metrics cpu warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 1017,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "2a8e41e4-021f-4207-b5e7-ac6a502b21ec",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2a8e41e4-021f-4207-b5e7-ac6a502b21ec"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1017,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1d7733a0-2b2e-4c13-891c-9e9105da6b1a",
            "title": "GET metrics memory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics memory should return object",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedPercent == 'number', true, \"'usedPercent' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedMem == 'number', true, \"'usedMem' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.totalMem == 'number', true, \"'totalMem' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "1c1e479c-90c3-47d5-a6a5-71ed6f0de5b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1c1e479c-90c3-47d5-a6a5-71ed6f0de5b9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f853e302-8a02-47b6-8d3f-311e4c2a855f",
            "title": "GET metrics memory format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics memory format=nagios should return string",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "483e528e-b34d-456d-ba82-91d18f3e9ca3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "483e528e-b34d-456d-ba82-91d18f3e9ca3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "644b4290-8a4f-43f6-867a-65607deb0e90",
            "title": "GET metrics memory warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics memory warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "7a1c16ce-302c-455b-8771-e66531a28579",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a1c16ce-302c-455b-8771-e66531a28579"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6427baa6-8941-410d-83bd-46df4767e736",
            "title": "GET metrics memory warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "1da68ab4-642d-4c04-b164-a67fc70b9923",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1da68ab4-642d-4c04-b164-a67fc70b9923"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6087031b-5e26-4c1c-9b51-01d1f7faacb3",
            "title": "GET metrics memory warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "b4c37abd-c9df-4481-a906-09d589017724",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b4c37abd-c9df-4481-a906-09d589017724"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1a849599-d604-442c-a0f2-a2bf0710704d",
            "title": "GET metrics load",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics load should return object",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.load1 == 'number', true, \"'load1' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.load5 == 'number', true, \"'load5' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.load15 == 'number', true, \"'load15' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "eacf6fc8-9b27-427e-aa85-e9fc74f7f86f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "eacf6fc8-9b27-427e-aa85-e9fc74f7f86f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c9631179-1b5f-436d-b585-660d68e7de66",
            "title": "GET metrics load format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics load format=nagios should return string",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6d751025-80bc-4b95-a4ec-ec3beb8ca554",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6d751025-80bc-4b95-a4ec-ec3beb8ca554"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "217cda9a-fda5-4431-9bcf-ed52f1abcbdb",
            "title": "GET metrics load warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a0883e3b-0124-423d-a166-cb44254103c1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a0883e3b-0124-423d-a166-cb44254103c1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "199a7e6b-1d06-4528-b314-5ad970bc2649",
            "title": "GET metrics load warn1=10 critic1=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn1=10 critic1=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn1=10&critic1=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "f0aaf0ab-b2cc-47dc-9c5c-94412b6b3cf5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f0aaf0ab-b2cc-47dc-9c5c-94412b6b3cf5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1e2d5419-5303-4a0b-ac86-d33fbf0b66ed",
            "title": "GET metrics load warn5=10 critic5=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn5=10 critic5=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn5=10&critic5=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "cd9f5377-b148-4438-baef-1c81da6f87cf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cd9f5377-b148-4438-baef-1c81da6f87cf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c3cb0890-3841-4a0e-86c8-25980a411ad0",
            "title": "GET metrics load warn15=10 critic15=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn15=10 critic15=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn15=10&critic15=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a39c039f-7d3d-4cb2-9e5e-ef961cba7d98",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a39c039f-7d3d-4cb2-9e5e-ef961cba7d98"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c795b763-acf3-406f-8dbf-a8d721b8f3c3",
            "title": "GET metrics load warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "cf58e880-0e98-4a49-a580-8831c5792806",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cf58e880-0e98-4a49-a580-8831c5792806"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b7c2d71a-7c66-4f17-94a0-30a5edae5d54",
            "title": "GET metrics load warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "489572a7-5920-472d-a2f5-2c10ac2d8512",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "489572a7-5920-472d-a2f5-2c10ac2d8512"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9686c245-06c1-481c-a001-53ccd670c5a5",
            "title": "GET metrics disks",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics disks should return object",
                "timedOut": false,
                "duration": 56,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tC:: {\n\t\t\t\t\tname: \"C:\",\n\t\t\t\t\tfree: 5695320064,\n\t\t\t\t\ttotal: 128033222656,\n\t\t\t\t\tused: 122337902592,\n\t\t\t\t\ttotalGO: 119.2,\n\t\t\t\t\tusedGO: 113.9,\n\t\t\t\t\tfreeGO: 5.3,\n\t\t\t\t\tusedPercent: 96,\n\t\t\t\t\tisValid: true\n\t\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "c924db85-d456-41b1-8201-e42ed2f857a7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c924db85-d456-41b1-8201-e42ed2f857a7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 56,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "64d13f19-3e63-4f7b-9e9f-138bf02f1f7f",
            "title": "GET metrics disks format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics disks format=nagios should return string",
                "timedOut": false,
                "duration": 54,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "736e19af-ae66-4342-9861-ba152ad0fa16",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "736e19af-ae66-4342-9861-ba152ad0fa16"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 54,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "54d71c3e-de0a-45a1-82c5-275d1e55a519",
            "title": "GET metrics disks warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "75a31d99-d0c5-4304-8574-f3fe1b991b83",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "75a31d99-d0c5-4304-8574-f3fe1b991b83"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 50,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f18c1551-2bc9-4911-ac05-8ebd8f1ca43f",
            "title": "GET metrics disks fs=blablabla format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks fs=blablabla format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 49,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?fs=blablabla&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "e274e8d6-85ea-4418-912b-ffaddb824970",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e274e8d6-85ea-4418-912b-ffaddb824970"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 49,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "940cc263-28ba-42c8-826b-f495bf922935",
            "title": "GET metrics disks warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "81d1ff0f-3a4e-4811-aa55-052ec3a493ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "81d1ff0f-3a4e-4811-aa55-052ec3a493ed"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 50,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e6de7d83-d409-4755-818c-232f6c599e14",
            "title": "GET metrics disks warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 53,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "0c770e19-5da5-4596-a8cf-f9f0b4edc3d9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0c770e19-5da5-4596-a8cf-f9f0b4edc3d9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 53,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "cf239625-91e7-4025-b59a-582b364013a6",
        "title": "GET /_plugin/ssh",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/ssh should return 404",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/ssh')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "14f61179-c384-4d8f-ba7f-6d31ca7dd1c3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "14f61179-c384-4d8f-ba7f-6d31ca7dd1c3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8199d0c3-5ab0-4123-9ed2-afa5a3efeaa5",
        "title": "/_plugin/ssh/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "43eb0790-abdb-4cda-979c-876721a199df",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/upload upload file should return 200",
                "timedOut": false,
                "duration": 379,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/tmp/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\tcheckUploadResult( res, sourceFile, path  )\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ad179716-9b13-422e-aee8-a66c6cf14f6d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ad179716-9b13-422e-aee8-a66c6cf14f6d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 379,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3597fc89-5aaa-4865-9b0a-665f917debbd",
            "title": "upload file in incorrect path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/upload upload file in incorrect path should return 400",
                "timedOut": false,
                "duration": 113,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/blablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    }\n\t\t\t\n\texecRequestExpectError( opt, done, 400 )",
                "err": {},
                "isRoot": false,
                "uuid": "b13ae115-33ce-4676-acdf-ac646b47fdad",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b13ae115-33ce-4676-acdf-ac646b47fdad"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 113,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "2fd0f840-88e9-4ba2-a996-7077d786b01f",
        "title": "/_plugin/ssh with password",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "983d8e04-af10-4609-afe3-dc2203e3823e",
            "title": "exec script on unknown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script on unknown host should return 500",
                "timedOut": false,
                "duration": 2274,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: 'blablabla',\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-socket')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "7ef041ed-48cf-49fd-8b5b-371d1e88b6fc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7ef041ed-48cf-49fd-8b5b-371d1e88b6fc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2274,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "3a6c7081-ea36-4b25-9908-c7d28398f3b9",
            "title": "exec script with incorrect password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script with incorrect password should return 500",
                "timedOut": false,
                "duration": 1677,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "668fe550-8dc8-4c52-b9ac-1b7975d133b0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "668fe550-8dc8-4c52-b9ac-1b7975d133b0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1677,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "30729d3c-c4e8-4503-b1e0-f2d642ba7bf4",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script should return 200",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "057e0df8-2dbf-403c-9df3-bff71ce14a75",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "057e0df8-2dbf-403c-9df3-bff71ce14a75"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 50,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "825f3b61-710e-4706-9302-4225943b0398",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 58,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "bddf8870-b2dd-47db-98f2-7ce63dac3c14",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bddf8870-b2dd-47db-98f2-7ce63dac3c14"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 58,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "25c4b8ca-d9a0-413f-a000-ae83019ed04d",
        "title": "/_plugin/ssh sftpReaddir",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "20c49794-17ae-499d-80af-331437ebc207",
            "title": "sftpReaddir",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh sftpReaddir sftpReaddir should return 200",
                "timedOut": false,
                "duration": 160,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\n\t\t\tlet opt = getHttpOptions('GET', '/_plugin/ssh/sftpReaddir?'+params)\n\t\t\t    \n\t\t    request( opt )\n\t\t\t.then( (res) => {\t\n\t\t\t\t\n\t\t\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(typeof res.body.result, 'object', 'result is not object');\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3a71c926-5cc7-46a8-a834-ac5b89729d16",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3a71c926-5cc7-46a8-a834-ac5b89729d16"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 160,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b3c93fbe-4e42-4ac0-8fa8-c37313b25705",
            "title": "sftpReadir with no path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh sftpReaddir sftpReadir with no path should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\n\t\t\tlet opt = getHttpOptions('GET', '/_plugin/ssh/sftpReaddir?'+params)\n\t\t\t\n\t\t    execRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "e9db1b32-0726-4759-9a76-b89847eb7cb8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e9db1b32-0726-4759-9a76-b89847eb7cb8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c1047b9c-2cb9-4980-9521-0c37283967c0",
            "title": "sftpReadir with incorrect path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh sftpReaddir sftpReadir with incorrect path should return 400",
                "timedOut": false,
                "duration": 89,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/dfgdfsgfdsgdsfg&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\n\t\t\tlet opt = getHttpOptions('GET', '/_plugin/ssh/sftpReaddir?'+params)\n\t\t\t\n\t\t    execRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "0ac91706-1c6d-4842-9a51-78ac685a5d76",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0ac91706-1c6d-4842-9a51-78ac685a5d76"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 89,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d493a4df-8393-47f3-afc2-3762791b1b16",
        "title": "/_plugin/ssh with remote key",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "937de918-4089-4510-b4df-16dd4fc560d2",
            "title": "exec script with incorrect passphrase",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with remote key exec script with incorrect passphrase should return 500",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "e47bb05f-4f4b-4539-a074-51783cdb324c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e47bb05f-4f4b-4539-a074-51783cdb324c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 18,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "64e6d555-4292-4c1c-a5bc-63d22061e3c6",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script should return 200",
                "timedOut": false,
                "duration": 305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "007c6c0d-342f-4f2b-abf8-744db34200e4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "007c6c0d-342f-4f2b-abf8-744db34200e4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 305,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "4d6f86c0-c2dc-4844-b8f9-19872de3d55f",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 52,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3b920c72-14c8-40ca-9add-9fdfa093f6d8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3b920c72-14c8-40ca-9add-9fdfa093f6d8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 52,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "25dccb4c-1caf-47fa-ab58-a990cf0c5eba",
        "title": "/_plugin/ssh/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "353e4166-ef84-4af5-b6cc-81ae8b712e2d",
            "title": "download with password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/download download with password should return 200",
                "timedOut": false,
                "duration": 176,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/upload.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"upload.txt\"', 'Content-Disposition is not attachment');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "f4c169b2-22d1-4d8a-bd0c-a9aac3322093",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f4c169b2-22d1-4d8a-bd0c-a9aac3322093"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 176,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1fc0082d-77cc-4784-b6ca-9908925c612b",
            "title": "download not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/download download not existing file should return 400",
                "timedOut": false,
                "duration": 92,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/blablablaff.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "7ff8ced9-5b66-4692-ae77-eea710b86f39",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7ff8ced9-5b66-4692-ae77-eea710b86f39"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 92,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "05dbe457-25f0-4b22-ba61-d494d4ac4e84",
            "title": "download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh/download download directory should return 500",
                "timedOut": false,
                "duration": 184,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "82ed14c9-8ad3-4c27-9ae4-327028a5188b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "82ed14c9-8ad3-4c27-9ae4-327028a5188b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 184,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}