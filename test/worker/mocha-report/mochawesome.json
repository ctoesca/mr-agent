{
  "stats": {
    "suites": 114,
    "tests": 96,
    "passes": 96,
    "pending": 0,
    "failures": 0,
    "start": "2019-06-05T23:55:10.116Z",
    "end": "2019-06-05T23:55:29.350Z",
    "duration": 19234,
    "testsRegistered": 96,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "4a9b76c9-b4e2-42ce-b6e8-7a28e41416bd",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "bf48cc13-8b47-4f66-b0df-c5b3c5c19f80",
        "title": "main-api",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "551d37df-ff57-49fb-8167-7ad483ecf92f",
            "title": "GET /api/checkAgent",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkAgent should return 200",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkAgent') )\n\t\t\t.then( (res) => {\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.status, 0);\n\t\t\t\tassert.strictEqual(typeof res.body.version, 'string');\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "0799d93c-3355-4d01-8e55-1f85f4e2f921",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0799d93c-3355-4d01-8e55-1f85f4e2f921"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 13,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5a51c6f7-6766-40be-84ac-eb5e9ef271c8",
            "title": "GET /api/checkPort",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkPort should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkPort?port='+PORT+'&host='+HOST) )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.result, true);\n\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "69734ae3-3a99-458e-b783-52d0d97f8263",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "69734ae3-3a99-458e-b783-52d0d97f8263"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6ade49b2-dcd4-4398-8599-19f6efa59de2",
            "title": "GET /api/admin/os/cpus",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/admin/os/cpus should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/admin/os/cpus') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body), true, 'body is array')\t\t\n\t\t\t\tassert.strictEqual(res.body.length > 0, true, 'result is empty')\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ef7bec54-80f8-4724-9c3f-e5858bb1a99f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ef7bec54-80f8-4724-9c3f-e5858bb1a99f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d43c7851-e741-4828-97e3-320224c8a8c8",
            "title": "POST /api/getConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/getConfig should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('POST', '/api/getConfig') )\n.then( (res) => {\t\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tconfData = res.body.data\n\tdone()\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "060a6770-7bdb-4538-8d89-62396ac41dd5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "060a6770-7bdb-4538-8d89-62396ac41dd5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e0df8f3e-9a3a-4f30-bf75-b4b24250c168",
            "title": "POST /api/setConfig without data",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data should return 400",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {}\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "7e0367fc-765a-47d3-b4a1-84971f03f3c7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7e0367fc-765a-47d3-b4a1-84971f03f3c7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "77e27afa-1787-495a-85b3-8ccfbdeb16b5",
            "title": "POST /api/setConfig without data.getConfig()",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data.getConfig() should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: '{}'\n}\n\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "2da8f69c-d79e-46b2-bee9-881edd385548",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2da8f69c-d79e-46b2-bee9-881edd385548"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ab8608d8-7baf-480d-9f74-23a2c7ca4f93",
            "title": "POST /api/setConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/setConfig should return 200",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: confData\n}\n\nrequest( updateOpt )\n.then( (res) => {\t\n\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tdone()\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "aa9c45be-dba1-4e8f-96be-9bdefea8e4b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "aa9c45be-dba1-4e8f-96be-9bdefea8e4b2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 11,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "9ac63dc6-2143-46f3-a3ed-8a561dadabe5",
        "title": "plugin-dns",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "cb993abd-cb72-494b-b25f-cfea93557f93",
            "title": "GET /_plugin/dns/dnsReverse",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse should return 200",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "aa044636-336c-4ff8-a3ea-67e9cc8057ff",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "aa044636-336c-4ff8-a3ea-67e9cc8057ff"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 50,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "95523450-7db9-4ca1-9507-41dedce896b9",
            "title": "GET /_plugin/dns/dnsReverse (user cache)",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse (user cache) should return 200",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6508f098-cd65-4ded-8ea5-67ab490a4650",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6508f098-cd65-4ded-8ea5-67ab490a4650"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4d34b21d-7a9c-4731-89c1-7c82ac1c4044",
        "title": "GET /_plugin/filesystem",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/filesystem should return 404",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "8f40175b-764b-4992-83fa-b86748e5f626",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8f40175b-764b-4992-83fa-b86748e5f626"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "59bdeaff-2b75-4cae-ae66-0a9af28048ef",
        "title": "/_plugin/filesystem/moveFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "1f4e4ccf-7a6b-4eb2-bf78-955d2908d568",
            "title": "POST /moveFile no path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no path should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "d8f28909-e57e-48a8-8a93-6a02701725e4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d8f28909-e57e-48a8-8a93-6a02701725e4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8ba4942a-c047-43ef-ae18-9f9bf63ee53d",
            "title": "POST /moveFile no dest",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no dest should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/testmove1.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: path\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "1a2a560e-fb94-45f4-bcf3-d38b00c9b4cb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1a2a560e-fb94-45f4-bcf3-d38b00c9b4cb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "4b30b3ae-9d83-4441-882f-9877cefab396",
            "title": "POST /moveFile to directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 - dest is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile to directory should return 400 - dest is directory",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "ceae3af1-d9db-4789-abb5-43d3407c59b3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ceae3af1-d9db-4789-abb5-43d3407c59b3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f18bd18e-464e-40bc-928b-846b557f5281",
            "title": "POST /moveFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile dest directory does not exists should return error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.unlinkSync(tmpDir+'/blablabla')\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "b57fc784-6647-47bb-981b-41f107511385",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b57fc784-6647-47bb-981b-41f107511385"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a31cffd6-37db-480e-b43e-4f83f37ab094",
            "title": "POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt should return 200",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "0423126c-70f8-4920-871a-0c1aa8b19577",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0423126c-70f8-4920-871a-0c1aa8b19577"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b10f056e-cfb5-4618-bac1-23abaebe3f29",
            "title": "POST /moveFile - dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists should return 400",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "05de3f42-b4cc-41f7-b81c-37d62eff9e1f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "05de3f42-b4cc-41f7-b81c-37d62eff9e1f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "72600fcc-4671-45ef-997b-36b188c41cc0",
            "title": "POST /moveFile - dest already exists - overwrite=true",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists - overwrite=true should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest,\n\toverwrite: true\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "027d701b-404d-4570-9efa-465ae079b18e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "027d701b-404d-4570-9efa-465ae079b18e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cca2ca09-11c3-4c03-8075-5970d33d6772",
            "title": "POST /moveFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "14681ab6-de24-4b67-8b2f-b8cd17961716",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "14681ab6-de24-4b67-8b2f-b8cd17961716"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "277128df-f57d-49b6-81b0-495cbe57710e",
        "title": "/_plugin/filesystem/copyFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "8a7b3b6f-d8ae-43b9-80df-224502a2d1af",
            "title": "POST /copyFile dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest is directory should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "97141139-a132-4dda-a598-674f4e58f5ab",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "97141139-a132-4dda-a598-674f4e58f5ab"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "31bec431-5b6e-458e-b2ff-9bd5939871f9",
            "title": "POST /copyFile dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest already exists should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nif (!fs.pathExistsSync(dest))\n\tfs.writeFileSync(dest, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\t\t\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "fbd3a3bc-ed2a-4371-bf46-6a4dfb510fe6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fbd3a3bc-ed2a-4371-bf46-6a4dfb510fe6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3f8c5405-5271-4377-8976-343d6b121b37",
            "title": "POST /copyFile path does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path does not exists should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceDir+'/blablabla'\nlet dest = tmpDir+'/blablabla'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "99416703-c1e2-4124-bc22-3b42213eac1e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "99416703-c1e2-4124-bc22-3b42213eac1e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f9770fe4-2af8-4279-9702-0650d4ace5ec",
            "title": "POST /copyFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest directory does not exists should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.removeSync(tmpDir+'/blablabla')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "ed971570-260a-4db9-81c8-5496bc055b9e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ed971570-260a-4db9-81c8-5496bc055b9e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "892d8259-8487-44b0-acc4-54fdecff831b",
            "title": "POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "6deda242-ce14-48c8-a65d-65c3189015ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6deda242-ce14-48c8-a65d-65c3189015ba"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1f5eb374-17c6-4c22-882b-60e5c23d8b28",
            "title": "POST /copyFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\n\t\t\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "e600fc1b-3a8c-49af-9664-1b2f8876a2dd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e600fc1b-3a8c-49af-9664-1b2f8876a2dd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b5f5eba2-56d2-48ef-84b7-50ce8a43515a",
        "title": "/_plugin/filesystem/fileinfo",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "4c970a90-19ba-410a-b5b1-e03834c1220c",
            "title": "GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.name, 'index.js');\n\tassert.strictEqual(res.body.contentType.contains('application/javascript'), true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "accfa4fe-4ead-44fe-a22a-0328a4debe60",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "accfa4fe-4ead-44fe-a22a-0328a4debe60"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b320be90-0366-4d25-8373-3cf149f5bd2c",
            "title": "GET /fileinfo path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path=blablabla')\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "548f4ebf-9f13-4fd8-a8f5-27be1ca809b4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "548f4ebf-9f13-4fd8-a8f5-27be1ca809b4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "fc9436d8-8aa5-42fc-be1a-a279e42fddaf",
            "title": "GET /fileinfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "fd54441f-e367-4eac-8123-70fb140ed30c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fd54441f-e367-4eac-8123-70fb140ed30c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b411619b-4002-42f3-9bc7-ebe2ecfb855e",
        "title": "/_plugin/filesystem/fileExists",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "57e73eb3-e3be-4d21-a464-5e8b02746407",
            "title": "GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4088fad5-84dc-49b9-bc85-f36f20ee5cf0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4088fad5-84dc-49b9-bc85-f36f20ee5cf0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a1768405-b6c9-4f5a-ad85-28a18985cbad",
            "title": "GET /fileExists path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path=blablabla')\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, false);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "07b5903e-a2ad-4bca-938e-16add4d70a81",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "07b5903e-a2ad-4bca-938e-16add4d70a81"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "81301325-be5d-4e48-bd6d-3ee4570f7aad",
            "title": "GET /fileExists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists should return 400",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "0adceb87-027f-410f-bdb2-14c719bd7f57",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0adceb87-027f-410f-bdb2-14c719bd7f57"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a48ae9be-3a47-4281-b92f-653cfdb99024",
        "title": "/_plugin/filesystem/execScript",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7f0dedb1-5d22-495f-a585-d00514f8beb3",
            "title": "POST execScript type=shell",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=shell should return 200",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\"\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "bd4c3c6d-b4bf-4764-8cde-055ee6ee7b4b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bd4c3c6d-b4bf-4764-8cde-055ee6ee7b4b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 22,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f33591d2-540e-4050-8d4f-8c01b9d6a9d6",
            "title": "POST execScript type=blabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error 400",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=blabla should return error 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\",\n\ttype: 'blabla'\n}\nexecRequestExpectError(opt, done, 412)",
                "err": {},
                "isRoot": false,
                "uuid": "18e8c596-7484-4c87-a23e-96ec224f1379",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "18e8c596-7484-4c87-a23e-96ec224f1379"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a89eb40c-4578-41f1-a859-7ca9e42f203b",
            "title": "POST execScript type=javascript with result",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "798cd97e-0eae-4bc6-9e35-c9b39fdd8def",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "798cd97e-0eae-4bc6-9e35-c9b39fdd8def"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1c88c7b3-b60f-49ac-8dfb-34c36967e52c",
            "title": "POST execScript type=javascript with result && exitCode",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result && exitCode should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\\nexitCode=2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 2);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "497abb50-5335-41d2-8040-4858188d4f1f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "497abb50-5335-41d2-8040-4858188d4f1f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f5a0f096-3e9e-4faa-9c8e-af307900c0d7",
            "title": "POST execScript type=javascript with syntax error",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with syntax error should return 500",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"blabla\",\n\ttype: 'javascript'\n}\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "fdfb3073-4073-4938-ae15-2a3b7c56dee3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fdfb3073-4073-4938-ae15-2a3b7c56dee3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "eb95b7a2-46dd-4928-8607-b11b634007a6",
        "title": "/_plugin/filesystem/writeTextFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "74ccbe1b-5dc9-40a0-951d-c3450215e6ce",
            "title": "POST /_plugin/filesystem/writeTextFile",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST /_plugin/filesystem/writeTextFile should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\trequest( opt )\n\t\t\t.then( (res) => {\t\n\t\t\nassert.strictEqual(res.statusCode, 200);\nassert.strictEqual(typeof res.body, 'object');\nassert.strictEqual(typeof res.body.path, 'string');\nassert.strictEqual(res.body.result, true);\ndone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\ndone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "1117b35b-696a-4ecb-92e1-3d38cbf7c68f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1117b35b-696a-4ecb-92e1-3d38cbf7c68f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "15ab78b9-2bd0-4df5-8397-108377bc1890",
            "title": "POST writeTextFile, path does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST writeTextFile, path does not exist should return 500",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/blabla/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\texecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "b30ea6f6-30df-4496-bfe1-f56a6822131e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b30ea6f6-30df-4496-bfe1-f56a6822131e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1a1f67e0-11c6-4e1f-b76e-42e580f75c2e",
        "title": "/_plugin/filesystem/list",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "937ee313-6f80-43ad-847b-6f0011807065",
            "title": "GET path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 23);\n\tassert.strictEqual(res.body.files.length, 23);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "8558b137-0e6a-4f38-9243-a3984d0d4d16",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8558b137-0e6a-4f38-9243-a3984d0d4d16"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "458539af-d046-4f63-a163-c4f44e01a181",
            "title": "GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 221);\n\tassert.strictEqual(res.body.files.length, 221);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "b00c324a-1a6b-48aa-b1b4-4944960845b3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b00c324a-1a6b-48aa-b1b4-4944960845b3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 34,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "811da8d7-e722-4f09-9acd-6bf1271b7609",
            "title": "GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&filter=*.js&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 65);\n\tassert.strictEqual(res.body.files.length, 65);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "fc987c3c-dd97-4eef-9c92-5b6bf527786c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fc987c3c-dd97-4eef-9c92-5b6bf527786c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 25,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e369118a-ec5b-42e1-bdf7-3f678bc58642",
            "title": "GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&maxResults=10&filter=*.ts&path='+sourceDir\n\trequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object');\n\t\tassert.strictEqual(typeof res.body.files, 'object');\n\t\tassert.strictEqual(typeof res.body.files.push, 'function');\n\t\tassert.strictEqual(res.body.total, 65);\n\t\tassert.strictEqual(res.body.files.length, 10);\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "aaab3757-e312-4947-bfd0-f8838b53997d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "aaab3757-e312-4947-bfd0-f8838b53997d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 25,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "19346d16-547c-4052-96af-dce11f002d85",
            "title": "GET recursive=true&path=/blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=/blablabla should return error",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path=/blablabla'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/list?'+query)\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "7c2b2f31-1d67-4078-9221-04191cf0d301",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7c2b2f31-1d67-4078-9221-04191cf0d301"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e82ef430-f1fe-47ee-9cbb-708eeb14e51b",
        "title": "/_plugin/filesystem/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "2d6cc349-77c6-45d4-a1c9-31757570fb64",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/upload upload file should return 200",
                "timedOut": false,
                "duration": 508,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\t//console.log( res.body)\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object', 'body is not object');\n\t\tassert.strictEqual(typeof res.body.file, 'object', 'body.file is not object');\t\t\t\t\n\t\tassert.strictEqual(res.body.path, path, 'body.path != '+path);\n\t\tassert.strictEqual(fs.pathExistsSync(path), true, 'uploaded file does not exists');\n\t\tassert.strictEqual(fs.statSync(path).size != 0, true, 'uploaded file size != 0');\n\t\t\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "71619ee4-b9db-4e36-8144-656d58151ab8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "71619ee4-b9db-4e36-8144-656d58151ab8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 508,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "28b8697b-bcf4-4f1f-a97d-6cb070bd9cff",
            "title": "upload no file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload no file should return error",
                "timedOut": false,
                "duration": 472,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload2.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        name: sourceFileName,\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "6595fb0c-22af-4ed8-93db-fbe72a61b39b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6595fb0c-22af-4ed8-93db-fbe72a61b39b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 472,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "df653fb2-84de-47be-b65c-35276b440eca",
            "title": "upload file - dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest is a directory)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest is directory should return 400 (dest is a directory)",
                "timedOut": false,
                "duration": 63,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "5ea3361f-72cd-4fb8-a193-1e64d632a34e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5ea3361f-72cd-4fb8-a193-1e64d632a34e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 63,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5f6ebce3-3b48-4419-a8b3-fcae7e8c9c0c",
            "title": "upload file - dest directory does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest a directory does not exist)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest directory does not exist should return 400 (dest a directory does not exist)",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/uploadblablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "e83adb0f-287e-4fa1-a68b-6b4e6d1ba6df",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e83adb0f-287e-4fa1-a68b-6b4e6d1ba6df"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0586cd9b-67ad-4b45-9dbc-f2eb99db0f4f",
            "title": "upload existing file - overwrite=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload existing file - overwrite=false should return error",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path+'&overwrite=false')\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "2101c967-fbce-4893-a313-98d24588b0a1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2101c967-fbce-4893-a313-98d24588b0a1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "cf22832b-a1f4-49e5-ba29-87172b7cd408",
        "title": "/_plugin/filesystem/deleteFiles",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "e0a3cd50-33a0-404e-be0f-56d7cc7693c7",
            "title": "delete existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete existing file should return 200",
                "timedOut": false,
                "duration": 75,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nfs.writeFileSync(path, 'test')\n\t\t\nrequest( opt )\n.then( (res) => {\t\n\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(fs.pathExistsSync(path), false);\n\tassert.strictEqual(res.body.result, true);\n\tassert.strictEqual(typeof res.body.filename, 'string');\n\tassert.strictEqual(res.body.path, path);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "9c6e7438-e09d-4b5e-ab3a-cb2c9193bc58",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9c6e7438-e09d-4b5e-ab3a-cb2c9193bc58"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 75,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "2fbbe0a8-f90a-4acc-9e7a-62f73a3acc72",
            "title": "delete not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete not existing file should return 404",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nif (fs.pathExistsSync(path))\n\tfs.unlinkSync(path)\n\t\t\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "056140ae-25f3-4f0c-8abe-d602d7bc28e1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "056140ae-25f3-4f0c-8abe-d602d7bc28e1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "635c3f62-cfad-44c2-89e7-e9fc791b852c",
        "title": "/_plugin/filesystem/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7097813f-ce19-4541-b596-7590fc96de73",
            "title": "Download existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/javascript; charset=UTF-8');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');\n\tassert.strictEqual(res.headers['content-length'] > 0 , true, 'content-type > 0');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a8819e5d-5449-4d7a-b466-230bbceca3ce",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a8819e5d-5449-4d7a-b466-230bbceca3ce"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "34ae64bb-2453-4446-92d6-4a3a3511aab9",
            "title": "Download existing file - compress=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file - compress=false should return 200",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'&compress=false'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\t/*assert.strictEqual(res.headers['content-type'], 'application/javascript');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');*/\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "476b690e-8e5d-4bb2-999a-c1571abace0e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "476b690e-8e5d-4bb2-999a-c1571abace0e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 14,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "428fc292-891c-43d0-994d-4f8c1ae4a8c6",
            "title": "Download file - file does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/download Download file - file does not exists should return 404",
                "timedOut": false,
                "duration": 84,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'/balbalba'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "d9eb1ac9-26f6-4317-ba3f-f127c241d83c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d9eb1ac9-26f6-4317-ba3f-f127c241d83c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 84,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "432aad25-5531-440e-b4a4-fed488a17a49",
            "title": "Download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download directory should return 200",
                "timedOut": false,
                "duration": 1502,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceDir\nlet dest = tmpDir+'/downloadZip.zip'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet destFileStream = fs.createWriteStream(dest);\nrequest( opt , (error, res, body) => {\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/zip');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"dist.zip\"');\t\t\n})\n.pipe(destFileStream)\n\t\t    .on('finish', () => {\n\n\t\t    \tif (fs.pathExistsSync(dest) && (fs.statSync(dest).size > 0))\n\t\t       \t\tdone();\t\t \t      \n\t\t       \telse\n\t\t       \t\tdone('Downloaded file does not exists or is empty');\t\t \t      \n\t\t    })\n\t\t    .on('error', (error) => {\n\t\t        done(error);\n\t\t    })",
                "err": {},
                "isRoot": false,
                "uuid": "77c7148c-7957-4d6c-939d-4bef09eada38",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "77c7148c-7957-4d6c-939d-4bef09eada38"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1502,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "2d7297e6-3cb9-4ee8-a803-c1eb37dee6e5",
        "title": "plugin-http",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "33d4d4fc-8230-4fa4-bae6-b32ab2cfc4e6",
            "title": "POST /_plugin/http/request",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-http POST /_plugin/http/request should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.body, 'object');\n\tassert.strictEqual(res.body.body.status, 0);\n\texpect(res.body.status).to.equal(200);\n\tassert.strictEqual(typeof res.body.body.version, 'string');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "e01f34da-90c5-4286-bd27-b9890b108d21",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e01f34da-90c5-4286-bd27-b9890b108d21"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "09677c64-84ee-4435-bd1b-0c3f79014220",
            "title": "POST /_plugin/http/request to unkown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown host should return 200 - content is error",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+'blablabla:'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, true);\n\tassert.strictEqual(typeof res.body.error !== 'undefined', true);\n\tassert.strictEqual(res.body.status, null);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "ab9bc6bf-9acf-4371-ba6c-7a1e428085b3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ab9bc6bf-9acf-4371-ba6c-7a1e428085b3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "00ccb783-aae3-43cb-a917-8d547b26fefd",
            "title": "POST /_plugin/http/request to unkown url",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error 404",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown url should return 200 - content is error 404",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgentBLABLABLA',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, false);\n\tassert.strictEqual(res.body.error, null);\n\tassert.strictEqual(res.body.status, 404);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4269ed9b-8707-44a6-97d8-f6b4617b1708",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4269ed9b-8707-44a6-97d8-f6b4617b1708"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "88591d67-6775-445b-8ec7-be51a2e664b2",
        "title": "plugin-metrics",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5faa3631-bb82-4c10-a2e5-685db6ae88c9",
            "title": "GET metrics getInfos",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics getInfos should return object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual( _.isArray(res.body.metrics) , true, 'body.metrics is not array')\t\t\n\t\t\t\tassert.strictEqual( res.body.metrics.length , 5, 'body.metrics length is not 5')\t\t\n\t\t\t\tlet cpuMetric =  res.body.metrics[0]\n\t\t\t\tassert.strictEqual( cpuMetric.name , 'cpu')\t\t\t\n\t\t\t\tassert.strictEqual( cpuMetric.url , 'http://'+HOST+':'+PORT+'/_plugin/metrics/cpu')\t\t\t\n\t\t\t\tassert.strictEqual( _.isArray(cpuMetric.args) , true, 'body.metrics[0].args is not array')\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "49baedb4-ca7f-41ee-865d-e842e0f73525",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "49baedb4-ca7f-41ee-865d-e842e0f73525"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7fd54b14-7f82-4aaf-b25b-885d2d835047",
            "title": "GET metrics systemInfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics systemInfo should return object",
                "timedOut": false,
                "duration": 17,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.release == 'string', true, \"'release' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.uptime == 'number', true, \"'uptime' property is not number'\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.osType == 'string', true, \"'osType' property is not number'\")\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "24b6989a-0f26-413a-a79b-586bbb339ac9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "24b6989a-0f26-413a-a79b-586bbb339ac9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 17,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "fb419e80-b234-4463-9fbc-d3c138145747",
            "title": "GET metrics systemInfo format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics systemInfo format=nagios should return string",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 0 )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "bcec2762-ec15-4ae4-b58e-b8a77a53ae82",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bcec2762-ec15-4ae4-b58e-b8a77a53ae82"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d43ea1b0-2029-4c86-8e6c-71c35570504f",
            "title": "GET metrics cpu",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics cpu should return object",
                "timedOut": false,
                "duration": 1004,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.ellapsed == 'number', true, \"'ellapsed' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.percentageCPU == 'number', true, \"'percentageCPU' property is not number'\")\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ec9dc471-5a21-4fec-a338-7fa9c7809779",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ec9dc471-5a21-4fec-a338-7fa9c7809779"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1004,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "afad35cd-be30-41bc-bfc9-0785ee7c95f6",
            "title": "GET metrics cpu format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics cpu format=nagios should return string",
                "timedOut": false,
                "duration": 1011,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "cfcc46cb-bfec-4b06-988a-208ab25ea018",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cfcc46cb-bfec-4b06-988a-208ab25ea018"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1011,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "20f86c86-5dea-4be2-9f77-ecf817c85123",
            "title": "GET metrics cpu warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics cpu warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1004,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=10&critic=5&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 3 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "2f695a80-f33a-4a73-857b-edc4647a4b5a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2f695a80-f33a-4a73-857b-edc4647a4b5a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1004,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1c3a3e21-a994-4216-bfe4-571bd129e24b",
            "title": "GET metrics cpu warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1006,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "e60d1c9e-2402-4ea4-b0ae-f2b51502c527",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e60d1c9e-2402-4ea4-b0ae-f2b51502c527"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "01150bd5-9a5e-4302-b5c9-94bc245a6c43",
            "title": "GET metrics cpu warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 1006,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "440f3350-86cf-4804-bb42-69c87a6a1a87",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "440f3350-86cf-4804-bb42-69c87a6a1a87"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "eac5a9c5-198e-47af-948c-9bbc6138ec56",
            "title": "GET metrics memory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics memory should return object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedPercent == 'number', true, \"'usedPercent' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedMem == 'number', true, \"'usedMem' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.totalMem == 'number', true, \"'totalMem' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "948e5cc1-ee39-4de7-b66b-0c8ae9a094e9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "948e5cc1-ee39-4de7-b66b-0c8ae9a094e9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0cc7c683-8c2b-4c81-af18-f28bde03514e",
            "title": "GET metrics memory format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics memory format=nagios should return string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "27dd10b2-d601-4bb8-b313-a2813f24de4b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "27dd10b2-d601-4bb8-b313-a2813f24de4b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "4b1cd1dd-5864-4f41-bb98-43b07cc803ef",
            "title": "GET metrics memory warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics memory warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "d91c1dcc-32bd-47dc-9525-dcee689d0446",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d91c1dcc-32bd-47dc-9525-dcee689d0446"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d69659ef-48ad-44e5-b2c2-f02646e3cd8e",
            "title": "GET metrics memory warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "1669aaec-e789-4142-9729-befaa660ee40",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1669aaec-e789-4142-9729-befaa660ee40"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e13a132f-a7f1-4850-b907-b4841fa2ad63",
            "title": "GET metrics memory warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3b66c74a-0bb6-4aa7-847c-07f4ec2c399c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3b66c74a-0bb6-4aa7-847c-07f4ec2c399c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0ff08708-cffc-41a3-b024-8457f41aaac5",
            "title": "GET metrics load",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics load should return object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.load1 == 'number', true, \"'load1' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.load5 == 'number', true, \"'load5' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.load15 == 'number', true, \"'load15' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "24f2fc0b-59c6-4af5-8553-05e8542896c1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "24f2fc0b-59c6-4af5-8553-05e8542896c1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "af642b06-8d72-4799-9bf7-970a22e9d258",
            "title": "GET metrics load format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics load format=nagios should return string",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "4c4f9d79-29ed-41fb-a96f-fb5d013e5d8f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4c4f9d79-29ed-41fb-a96f-fb5d013e5d8f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c896024d-7fa6-4b2a-b16f-4ce5523a7055",
            "title": "GET metrics load warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "82108793-6057-46a7-8e50-2cc099e75fcd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "82108793-6057-46a7-8e50-2cc099e75fcd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3739e9fd-f192-4489-ba4c-e2a7efca29c8",
            "title": "GET metrics load warn1=10 critic1=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn1=10 critic1=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn1=10&critic1=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "30b81c15-8022-4397-99db-5c9f765a0c00",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "30b81c15-8022-4397-99db-5c9f765a0c00"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ebcd08af-aaca-40bb-960f-06545fae45e4",
            "title": "GET metrics load warn5=10 critic5=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn5=10 critic5=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn5=10&critic5=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "007da1a4-1e68-467d-8789-ac2d7a4ed0d0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "007da1a4-1e68-467d-8789-ac2d7a4ed0d0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e852d07a-e545-4568-bc0c-ac9616463daf",
            "title": "GET metrics load warn15=10 critic15=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn15=10 critic15=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn15=10&critic15=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "ccf443fe-8433-4d10-87a1-9bced0a47989",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ccf443fe-8433-4d10-87a1-9bced0a47989"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d66014c8-332b-4b1f-ad4e-bbfd1f0c3e3d",
            "title": "GET metrics load warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "0345a911-b759-4f5b-9888-e9b94bd77028",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0345a911-b759-4f5b-9888-e9b94bd77028"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d77c3151-82ef-42b9-8d3d-f5fab1d90329",
            "title": "GET metrics load warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6821f612-0721-4134-93f9-56240a639b4b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6821f612-0721-4134-93f9-56240a639b4b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f00042da-9808-4c1e-9a8f-62ae25a56956",
            "title": "GET metrics disks",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics disks should return object",
                "timedOut": false,
                "duration": 450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tC:: {\n\t\t\t\t\tname: \"C:\",\n\t\t\t\t\tfree: 5695320064,\n\t\t\t\t\ttotal: 128033222656,\n\t\t\t\t\tused: 122337902592,\n\t\t\t\t\ttotalGO: 119.2,\n\t\t\t\t\tusedGO: 113.9,\n\t\t\t\t\tfreeGO: 5.3,\n\t\t\t\t\tusedPercent: 96,\n\t\t\t\t\tisValid: true\n\t\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "88e5ad72-aa4f-4bfb-baa4-71b6635ed7c1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "88e5ad72-aa4f-4bfb-baa4-71b6635ed7c1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 450,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "20a3dc40-a988-41ed-8c37-22afa0b0af8a",
            "title": "GET metrics disks format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics disks format=nagios should return string",
                "timedOut": false,
                "duration": 434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "082a1454-2a79-4eaa-90c8-826a47ca92bb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "082a1454-2a79-4eaa-90c8-826a47ca92bb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 434,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "4cb728ac-2c35-4400-b344-9c42de5e6f3b",
            "title": "GET metrics disks warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "cf373137-9758-432c-acbc-6e74254772b0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cf373137-9758-432c-acbc-6e74254772b0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 429,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "49229cca-0f6a-4917-ac35-3b614522bd93",
            "title": "GET metrics disks fs=blablabla format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks fs=blablabla format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 435,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?fs=blablabla&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "65ef14cb-8aa7-4fef-8728-96d9820b2882",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "65ef14cb-8aa7-4fef-8728-96d9820b2882"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 435,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "567bb301-fea9-4b53-8469-cb3f79cacb3d",
            "title": "GET metrics disks warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 446,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "1ad5f661-74b4-4e8a-8c85-dc8a21ef6978",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1ad5f661-74b4-4e8a-8c85-dc8a21ef6978"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 446,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "38b8f07b-5b2b-464e-bc10-e0715abba4ca",
            "title": "GET metrics disks warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 461,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "c7baefac-707c-427a-8dd9-88f04837ff47",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c7baefac-707c-427a-8dd9-88f04837ff47"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 461,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b2ad5b1d-5042-4371-9a9e-ce6ea0f20e86",
        "title": "GET /_plugin/ssh",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/ssh should return 404",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/ssh')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "365cd86c-895d-4108-9280-8e8df6d43f6f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "365cd86c-895d-4108-9280-8e8df6d43f6f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "03f83ac8-c682-4ae7-8eaa-fc1a0c801ade",
        "title": "/_plugin/ssh/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "161cc24c-080e-4712-9b58-ff874878c70e",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/upload upload file should return 200",
                "timedOut": false,
                "duration": 417,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/tmp/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\tcheckUploadResult( res, sourceFile, path  )\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6c8e1dfb-b842-4b43-a916-99f983001592",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6c8e1dfb-b842-4b43-a916-99f983001592"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 417,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5f8e37e2-4c0c-47c9-9a6a-926dbc19d020",
            "title": "upload file in incorrect path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/upload upload file in incorrect path should return 400",
                "timedOut": false,
                "duration": 342,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/blablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    }\n\t\t\t\n\texecRequestExpectError( opt, done, 400 )",
                "err": {},
                "isRoot": false,
                "uuid": "6ac28752-c0cb-4133-a2bd-462e8c9f6cad",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6ac28752-c0cb-4133-a2bd-462e8c9f6cad"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 342,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4a304d02-580b-4fd6-ab8f-4e0aa0791725",
        "title": "/_plugin/ssh with password",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0c015ed0-c306-47f8-9fe5-256ab28b9b64",
            "title": "exec script on unknown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script on unknown host should return 500",
                "timedOut": false,
                "duration": 2257,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: 'blablabla',\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-socket')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "4d4767d3-8290-4347-8331-7205704a0ce3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4d4767d3-8290-4347-8331-7205704a0ce3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2257,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "48b7a87b-a1c0-4964-bd72-e3c042a055fd",
            "title": "exec script with incorrect password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script with incorrect password should return 500",
                "timedOut": false,
                "duration": 2650,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "65febecb-8df8-4e13-9e68-85f3b2a095b6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "65febecb-8df8-4e13-9e68-85f3b2a095b6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2650,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "49e70ec2-be7d-4d49-a5f4-920a7a0913c3",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script should return 200",
                "timedOut": false,
                "duration": 363,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "f44ad6b5-d3f8-4269-9c7b-25069433dc4a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f44ad6b5-d3f8-4269-9c7b-25069433dc4a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 363,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f2aea7b4-342f-4db6-a8da-312dbcaaf23e",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 307,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6e7cadd4-c6d3-474a-a7f8-7accf579fc1b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6e7cadd4-c6d3-474a-a7f8-7accf579fc1b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 307,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "316a9fc6-08de-48c7-b624-be79904e8e14",
        "title": "/_plugin/ssh with remote key",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "bd095a43-08fe-4e74-ac7a-a96412a5a590",
            "title": "exec script with incorrect passphrase",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with remote key exec script with incorrect passphrase should return 500",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3066d373-ad1f-4e00-a718-7e0ecaed6f6b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3066d373-ad1f-4e00-a718-7e0ecaed6f6b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "fd4aa5bb-3592-49c5-b1f8-c3656943d5d5",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script should return 200",
                "timedOut": false,
                "duration": 346,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3f4b6779-0bb3-4e0d-a567-ba4ccaaca73d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3f4b6779-0bb3-4e0d-a567-ba4ccaaca73d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 346,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "579e0270-9264-4ee1-b3d9-d85b61a31a3b",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 392,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "9c8430e8-08f8-4749-85ca-a23a40ff61a2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9c8430e8-08f8-4749-85ca-a23a40ff61a2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 392,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "640fff87-0ae6-4d6c-83cb-a91e3b2466a7",
        "title": "/_plugin/ssh/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0b501330-40cf-4e60-a702-a421ab1d47cf",
            "title": "download with password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/download download with password should return 200",
                "timedOut": false,
                "duration": 411,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/upload.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"upload.txt\"', 'Content-Disposition is not attachment');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "7a625a57-0e5e-432c-9e4f-c38b6260c8cc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a625a57-0e5e-432c-9e4f-c38b6260c8cc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 411,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6ad68aca-1b89-4da0-9f5b-c640500ec363",
            "title": "download not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/download download not existing file should return 400",
                "timedOut": false,
                "duration": 318,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/blablablaff.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "00bd60d1-6c75-4625-be32-e31680349d3a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "00bd60d1-6c75-4625-be32-e31680349d3a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 318,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "47616054-9ab7-4251-944a-81844aabd6c4",
            "title": "download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh/download download directory should return 500",
                "timedOut": false,
                "duration": 610,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "3109d9a7-7205-4d58-a1cd-a05132c19978",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3109d9a7-7205-4d58-a1cd-a05132c19978"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 610,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}