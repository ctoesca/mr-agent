{
  "stats": {
    "suites": 115,
    "tests": 97,
    "passes": 97,
    "pending": 0,
    "failures": 0,
    "start": "2019-06-07T18:31:16.586Z",
    "end": "2019-06-07T18:31:37.551Z",
    "duration": 20965,
    "testsRegistered": 97,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "721f733b-6e1e-482c-83d6-38b890b0f2a8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "231e49c6-db46-4a0c-a4d0-3303ccf7f2d7",
        "title": "main-api",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
        "file": "\\test\\worker\\10-main-api.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "45782cb9-0f38-46d3-aadd-9e95a8f10850",
            "title": "GET /api/checkAgent",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkAgent should return 200",
                "timedOut": false,
                "duration": 17,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkAgent') )\n\t\t\t.then( (res) => {\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.status, 0);\n\t\t\t\tassert.strictEqual(typeof res.body.version, 'string');\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "92341e86-e79a-4c70-a374-6b5091edc0c7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "92341e86-e79a-4c70-a374-6b5091edc0c7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 17,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8452a220-2160-4a2e-8303-d83e1cde2e2f",
            "title": "GET /api/checkPort",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/checkPort should return 200",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/checkPort?port='+PORT+'&host='+HOST) )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object');\n\t\t\t\tassert.strictEqual(res.body.result, true);\n\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "d4e5e5bc-38bc-45d1-8923-5b6dff839db8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d4e5e5bc-38bc-45d1-8923-5b6dff839db8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "38e38da8-010b-49ec-be56-dea16b0307d2",
            "title": "GET /api/admin/os/cpus",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api GET /api/admin/os/cpus should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/api/admin/os/cpus') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body), true, 'body is array')\t\t\n\t\t\t\tassert.strictEqual(res.body.length > 0, true, 'result is empty')\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "821ac52d-fa71-4d74-af8b-5ef46bfaf013",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "821ac52d-fa71-4d74-af8b-5ef46bfaf013"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a6cfefa0-efe9-465a-be1a-69cfff862ed4",
            "title": "POST /api/getConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/getConfig should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('POST', '/api/getConfig') )\n.then( (res) => {\t\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tconfData = res.body.data\n\tdone()\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4e76b54e-19fd-4cd7-89f0-70053ed5046c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4e76b54e-19fd-4cd7-89f0-70053ed5046c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3a4a5f85-79d0-4f21-b0b1-45aad6013cef",
            "title": "POST /api/setConfig without data",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data should return 400",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {}\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "39f9d080-cbc2-42d1-b452-335f4ef740e1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "39f9d080-cbc2-42d1-b452-335f4ef740e1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 13,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9cda1754-5c07-491e-b703-228d82d37b8e",
            "title": "POST /api/setConfig without data.getConfig()",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "main-api POST /api/setConfig without data.getConfig() should return 400",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: '{}'\n}\n\nexecRequestExpectError(updateOpt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "4980da4e-b858-40ba-8dbb-afddd22aa8ef",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4980da4e-b858-40ba-8dbb-afddd22aa8ef"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a80010b3-9515-4398-ae82-353bd756f5f2",
            "title": "POST /api/setConfig",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\10-main-api.js",
            "file": "\\test\\worker\\10-main-api.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "main-api POST /api/setConfig should return 200",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let updateOpt = getHttpOptions('POST', '/api/setConfig')\t\t\t\t\nupdateOpt.body = {\n\tdata: confData\n}\n\nrequest( updateOpt )\n.then( (res) => {\t\n\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.data, 'string');\n\tdone()\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "affdb7b4-ba85-465b-bdd7-aacee9f89f03",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "affdb7b4-ba85-465b-bdd7-aacee9f89f03"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "176d5cc1-fc6f-4546-83d3-99a9ec4bdfe7",
        "title": "plugin-dns",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
        "file": "\\test\\worker\\20-plugin-dns.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "a20f4eca-017f-44f7-8ccb-f38276e89910",
            "title": "GET /_plugin/dns/dnsReverse",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse should return 200",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6bab5711-f4b7-4118-a40e-aa42975667af",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6bab5711-f4b7-4118-a40e-aa42975667af"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 13,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8137b1d9-b75d-4cc6-ae25-9ec67c2ff1fb",
            "title": "GET /_plugin/dns/dnsReverse",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=1.1.1.1') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '1.1.1.1')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, ['one.one.one.one'] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "e6e29283-355d-43ff-8575-54a060d396d2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e6e29283-355d-43ff-8575-54a060d396d2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "17452e04-7505-425f-a53e-3e33d6879ab9",
            "title": "GET /_plugin/dns/dnsReverse (no result)",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-dns.js",
            "file": "\\test\\worker\\20-plugin-dns.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-dns GET /_plugin/dns/dnsReverse (no result) should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/dns/dnsReverse?ip=0.0.0.0') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tconsole.log(res.body)\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(res.body.ip, '0.0.0.0')\t\t\t\t\t\n\t\t\t\tassert.strictEqual(_.isArray(res.body.hostnames), true, 'hostnames is not array')\t\t\t\t\t\t\n\t\t\t\tassert.deepEqual(res.body.hostnames, [] )\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "53207786-f7e5-49b4-acb3-1c41876e4d29",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "53207786-f7e5-49b4-acb3-1c41876e4d29"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e2ab79cc-aee0-4a87-a4ca-e5d9bd4aa081",
        "title": "GET /_plugin/filesystem",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/filesystem should return 404",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "3890f836-5721-4dc1-82ec-3bc3f2755d8f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3890f836-5721-4dc1-82ec-3bc3f2755d8f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "63e71195-6ca4-4024-a45a-494d7e43f5f8",
        "title": "/_plugin/filesystem/moveFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0396272e-7360-4e0d-ad5f-2aeba8f73303",
            "title": "POST /moveFile no path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no path should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "3945c648-7f42-40ae-b8d6-5a9f559c7140",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3945c648-7f42-40ae-b8d6-5a9f559c7140"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e4f9006e-3b91-42fd-962b-184bf68c72ed",
            "title": "POST /moveFile no dest",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile no dest should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/testmove1.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: path\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "868eaeae-76dc-432c-aad9-222704a4e43b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "868eaeae-76dc-432c-aad9-222704a4e43b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "56942946-71a7-4967-8b56-a7b8c0185826",
            "title": "POST /moveFile to directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 - dest is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile to directory should return 400 - dest is directory",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "7b62807d-fe6a-423e-932d-9d6e1d562f2b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7b62807d-fe6a-423e-932d-9d6e1d562f2b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e75faeec-b813-451a-8145-a31a2a3012b6",
            "title": "POST /moveFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile dest directory does not exists should return error",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test-move1.txt'\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.unlinkSync(tmpDir+'/blablabla')\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "715d577e-f8b3-40ef-9eba-36ab580a427e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "715d577e-f8b3-40ef-9eba-36ab580a427e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "876e1ef7-31ff-4071-96f3-f1135688dfca",
            "title": "POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile path=\\\\localhost\\d$\\tmp/test.txt should return 200",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4826568d-956d-465e-a9c2-0f896e8862fa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4826568d-956d-465e-a9c2-0f896e8862fa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "77e36cb6-f99a-4224-8dd7-d40b122e1edc",
            "title": "POST /moveFile - dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists should return 400",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "e5198fa3-bac1-4ccf-9e64-76365fde1d59",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e5198fa3-bac1-4ccf-9e64-76365fde1d59"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "aa01ae55-fcfb-4907-acfb-e197eb2fbbc3",
            "title": "POST /moveFile - dest already exists - overwrite=true",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile - dest already exists - overwrite=true should return 200",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir+'/test.txt'\nlet dest = tmpDir+'/testMoved.txt'\nfs.writeFileSync(source, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest,\n\toverwrite: true\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "9126c460-dae9-4b8b-a03e-862354e207d0",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9126c460-dae9-4b8b-a03e-862354e207d0"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "acb9b28b-d499-474d-b1ae-9730f8978031",
            "title": "POST /moveFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/moveFile POST /moveFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/moveFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "bf13d0b1-1748-4ffb-9ef3-7e97ede60f5c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bf13d0b1-1748-4ffb-9ef3-7e97ede60f5c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "aa92d7dc-4236-4c66-b521-3647291a3203",
        "title": "/_plugin/filesystem/copyFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "616cabda-5ae9-4433-82ed-921ec80c3e03",
            "title": "POST /copyFile dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest is directory should return 400",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "39107892-cfc8-46c5-8653-8ebe8b68a3ae",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "39107892-cfc8-46c5-8653-8ebe8b68a3ae"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "81816990-306e-4b08-b7b0-dac357373337",
            "title": "POST /copyFile dest already exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest already exists should return 200",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nif (!fs.pathExistsSync(dest))\n\tfs.writeFileSync(dest, 'test')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\t\t\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "0491da9d-c162-4f8e-a0b2-83f791379d45",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0491da9d-c162-4f8e-a0b2-83f791379d45"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "79fc95f5-50e4-4046-ad75-aa52f93f7abe",
            "title": "POST /copyFile path does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path does not exists should return error",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceDir+'/blablabla'\nlet dest = tmpDir+'/blablabla'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "bdf0b1f1-7974-4f13-8837-467117dc424c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bdf0b1f1-7974-4f13-8837-467117dc424c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c4583f43-b39d-415c-83ca-ad4d46af4087",
            "title": "POST /copyFile dest directory does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile dest directory does not exists should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/blablabla/index.txt'\nif (fs.pathExistsSync(tmpDir+'/blablabla'))\n\tfs.removeSync(tmpDir+'/blablabla')\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "cfb2a532-2f58-4feb-80a6-c3fb1edf7f13",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cfb2a532-2f58-4feb-80a6-c3fb1edf7f13"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "49e2c986-d81f-4320-89fb-aef138e21b53",
            "title": "POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = sourceFile\nlet dest = tmpDir+'/index.txt'\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "4e9b3b61-edb6-480a-abea-50af80588981",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4e9b3b61-edb6-480a-abea-50af80588981"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 9,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "d03197ab-2f18-436c-875a-bc5fae074498",
            "title": "POST /copyFile source is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error - source is directory",
                "fullTitle": "/_plugin/filesystem/copyFile POST /copyFile source is directory should return error - source is directory",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let source = tmpDir\nlet dest = tmpDir+'/testMoved.txt'\n\t\t\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/copyFile')\nopt.body = {\n\tpath: source,\n\tdest: dest\n}\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "9e0abf38-4a0e-4995-95d4-b1b9b8831646",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9e0abf38-4a0e-4995-95d4-b1b9b8831646"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "71934310-9006-4567-8a0e-c47edb795b5b",
        "title": "/_plugin/filesystem/fileinfo",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "868e7ff7-3292-4935-b6e6-bbc7daf408b2",
            "title": "GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.name, 'index.js');\n\tassert.strictEqual(res.body.contentType.contains('application/javascript'), true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "c2203044-2d5c-48bd-8bab-4cfec7ee723a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c2203044-2d5c-48bd-8bab-4cfec7ee723a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a0b9baad-dc27-4624-a2d7-a7275ef92466",
            "title": "GET /fileinfo path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo path=blablabla should return error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo?path=blablabla')\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "8e8da43b-65eb-4c21-81e0-02a48491681c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8e8da43b-65eb-4c21-81e0-02a48491681c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "602ea40f-14ae-45c7-8400-a6253584e323",
            "title": "GET /fileinfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileinfo GET /fileinfo should return 400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileinfo')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "78b36431-30c8-4a05-bf25-5756f49576d3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "78b36431-30c8-4a05-bf25-5756f49576d3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d31b3f4a-69d4-48ac-89ac-49e866b0c878",
        "title": "/_plugin/filesystem/fileExists",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "cd9d3af6-16a7-4e9c-a669-45783c6b6c4f",
            "title": "GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=D:\\projets\\mr-agent\\test\\worker/../../dist/index.js should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path='+sourceFile)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, true);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "51921505-e377-4afe-9bca-f909f87e5ef1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "51921505-e377-4afe-9bca-f909f87e5ef1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "510e32bb-e315-44c5-a944-3dfa97f72a95",
            "title": "GET /fileExists path=blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists path=blablabla should return error",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists?path=blablabla')\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.result, false);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "f8dffb68-8267-4f3c-b036-e75483a0a4cd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f8dffb68-8267-4f3c-b036-e75483a0a4cd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1592bc7a-b8aa-426b-be4d-ffc7ca308a08",
            "title": "GET /fileExists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/filesystem/fileExists GET /fileExists should return 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('GET', '/_plugin/filesystem/fileExists')\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "5baac47c-6c53-48e0-aac1-70c38288518d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5baac47c-6c53-48e0-aac1-70c38288518d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "75ff0d09-b932-4df5-8baf-ce186ff020f3",
        "title": "/_plugin/filesystem/execScript",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "24bfa6cb-556f-4cf3-94e9-ee1233b732f9",
            "title": "POST execScript type=shell",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=shell should return 200",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\"\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "af8fa3f7-e607-41c8-9613-bc81419c23a6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "af8fa3f7-e607-41c8-9613-bc81419c23a6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 24,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a8393aa6-6b11-49a7-93af-d9f5c4ffe1c9",
            "title": "POST execScript type=blabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error 400",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=blabla should return error 400",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"dir\",\n\ttype: 'blabla'\n}\nexecRequestExpectError(opt, done, 412)",
                "err": {},
                "isRoot": false,
                "uuid": "2f0f7503-efed-468e-b81a-6750d2b840d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2f0f7503-efed-468e-b81a-6750d2b840d4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c728d794-06bb-4caa-b9e0-8cccb4487a24",
            "title": "POST execScript type=javascript with result",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 0);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "467e9d74-2005-476e-9fa4-66af1f00829a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "467e9d74-2005-476e-9fa4-66af1f00829a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "78dd43c0-9f29-4423-9cd0-c723fe41d6de",
            "title": "POST execScript type=javascript with result && exitCode",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with result && exitCode should return 200",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"result = 2*2\\nexitCode=2\",\n\ttype: 'javascript'\n}\nrequest( opt )\n.then( (res) => {\t\n\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.stdout, 4);\n\tassert.strictEqual(res.body.exitCode, 2);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "fea01ac8-ae77-4673-b54a-9ff667e98179",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fea01ac8-ae77-4673-b54a-9ff667e98179"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cbd28185-ef46-477c-889a-e7b57bad981f",
            "title": "POST execScript type=javascript with syntax error",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/execScript POST execScript type=javascript with syntax error should return 500",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/execScript')\nopt.body = {\n\tscript: \"blabla\",\n\ttype: 'javascript'\n}\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "0caae1cf-6a09-41b0-b29f-076f02350d33",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0caae1cf-6a09-41b0-b29f-076f02350d33"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f52d5219-992e-4094-9a70-d91d653769ea",
        "title": "/_plugin/filesystem/writeTextFile",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "1cae2c85-ce2c-4309-ae9c-e1c1a61efaa1",
            "title": "POST /_plugin/filesystem/writeTextFile",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST /_plugin/filesystem/writeTextFile should return 200",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\trequest( opt )\n\t\t\t.then( (res) => {\t\n\t\t\nassert.strictEqual(res.statusCode, 200);\nassert.strictEqual(typeof res.body, 'object');\nassert.strictEqual(typeof res.body.path, 'string');\nassert.strictEqual(res.body.result, true);\ndone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\ndone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "cbce37ab-fec5-4cc8-bbcb-c1473e79c0b8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cbce37ab-fec5-4cc8-bbcb-c1473e79c0b8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "0c99d1aa-9452-483e-928b-a722995d60b0",
            "title": "POST writeTextFile, path does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/filesystem/writeTextFile POST writeTextFile, path does not exist should return 500",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/filesystem/writeTextFile')\n\t\t\topt.body = {\npath: tmpDir+\"/blabla/writeTextFile.txt\",\ncontent: 'test'\n\t\t\t}\n\n\t\t\texecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "ad72a777-1620-4bd1-a1a5-096a5d02a087",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ad72a777-1620-4bd1-a1a5-096a5d02a087"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "567e1b33-efad-4f02-aa37-18bf7e027340",
        "title": "/_plugin/filesystem/list",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f9d51193-89d1-4bf9-a208-b2c3d203d365",
            "title": "GET path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 23);\n\tassert.strictEqual(res.body.files.length, 23);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "992f3c7c-39b0-4ce4-9ef7-45ae1a3a1936",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "992f3c7c-39b0-4ce4-9ef7-45ae1a3a1936"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3e65a73e-a639-4310-979d-7c6da9841810",
            "title": "GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 29,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 221);\n\tassert.strictEqual(res.body.files.length, 221);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "c3b1c47d-d0b5-42e5-8014-96bc4aff93bf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c3b1c47d-d0b5-42e5-8014-96bc4aff93bf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 29,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b5c72e29-b456-45fe-ad26-984fe2c3e72c",
            "title": "GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&filter=*.js&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&filter=*.js&path='+sourceDir\nrequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.files, 'object');\n\tassert.strictEqual(typeof res.body.files.push, 'function');\n\tassert.strictEqual(res.body.total, 65);\n\tassert.strictEqual(res.body.files.length, 65);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "1e1e9f4f-0e47-42a5-a27b-e9b1a2e607f3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1e1e9f4f-0e47-42a5-a27b-e9b1a2e607f3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 22,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cff016d7-0bdf-4c1f-a8ad-528cb3615d51",
            "title": "GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return file list",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&maxResults=10&filter=*.ts&path=D:\\projets\\mr-agent\\test\\worker/../../dist should return file list",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&maxResults=10&filter=*.ts&path='+sourceDir\n\trequest( getHttpOptions('GET', '/_plugin/filesystem/list?'+query) )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object');\n\t\tassert.strictEqual(typeof res.body.files, 'object');\n\t\tassert.strictEqual(typeof res.body.files.push, 'function');\n\t\tassert.strictEqual(res.body.total, 65);\n\t\tassert.strictEqual(res.body.files.length, 10);\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "546e0cc1-6111-44d2-a5d6-3e940110e2a1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "546e0cc1-6111-44d2-a5d6-3e940110e2a1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 23,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "65da8683-bc5d-4c54-b1bf-3b50dcf556b2",
            "title": "GET recursive=true&path=/blablabla",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/list GET recursive=true&path=/blablabla should return error",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var query = 'recursive=true&path=/blablabla'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/list?'+query)\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "123ea0b4-8597-45cd-9a07-447982a07f27",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "123ea0b4-8597-45cd-9a07-447982a07f27"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8835942e-8e9d-4972-b1f1-bb19559c2f93",
        "title": "/_plugin/filesystem/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f55a2ca5-b2e4-4cff-aaa7-b5d9a4f8ab4c",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/upload upload file should return 200",
                "timedOut": false,
                "duration": 526,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\t//console.log( res.body)\n\t\tassert.strictEqual(res.statusCode, 200);\n\t\tassert.strictEqual(typeof res.body, 'object', 'body is not object');\n\t\tassert.strictEqual(typeof res.body.file, 'object', 'body.file is not object');\t\t\t\t\n\t\tassert.strictEqual(res.body.path, path, 'body.path != '+path);\n\t\tassert.strictEqual(fs.pathExistsSync(path), true, 'uploaded file does not exists');\n\t\tassert.strictEqual(fs.statSync(path).size != 0, true, 'uploaded file size != 0');\n\t\t\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "4dba9648-05c9-4512-bb15-cda10100f1e1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4dba9648-05c9-4512-bb15-cda10100f1e1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 526,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f3e1ba80-27b0-4525-a91a-7056c1d81e65",
            "title": "upload no file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload no file should return error",
                "timedOut": false,
                "duration": 494,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload2.txt'\n\tif (fs.pathExistsSync(path))\n\t\tfs.unlinkSync(path)\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        name: sourceFileName,\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "56b98088-0b30-4beb-a7e1-1afbc1274398",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "56b98088-0b30-4beb-a7e1-1afbc1274398"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 494,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "43228f95-8af5-47c0-afc0-24c59288668f",
            "title": "upload file - dest is directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest is a directory)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest is directory should return 400 (dest is a directory)",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "fdf6d425-bbe1-4e5b-9d27-f9a3692d6141",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fdf6d425-bbe1-4e5b-9d27-f9a3692d6141"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8c9975d6-1f6d-4363-8f7d-43c50299d9ac",
            "title": "upload file - dest directory does not exist",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400 (dest a directory does not exist)",
                "fullTitle": "/_plugin/filesystem/upload upload file - dest directory does not exist should return 400 (dest a directory does not exist)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/uploadblablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "b606b090-3352-4aed-aae1-e909f16cff7e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b606b090-3352-4aed-aae1-e909f16cff7e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e5e81017-6a6b-4c6e-8b26-1947a42561a8",
            "title": "upload existing file - overwrite=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return error",
                "fullTitle": "/_plugin/filesystem/upload upload existing file - overwrite=false should return error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/filesystem/upload?path='+path+'&overwrite=false')\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\texecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "c57cfbbc-8d8d-416b-90d1-c46877ffa7e1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c57cfbbc-8d8d-416b-90d1-c46877ffa7e1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "053ef1f9-85ae-4790-8c5a-271cb79eaa19",
        "title": "/_plugin/filesystem/deleteFiles",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "bfbce083-5085-453e-b00c-8703ac0540b5",
            "title": "delete existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete existing file should return 200",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nfs.writeFileSync(path, 'test')\n\t\t\nrequest( opt )\n.then( (res) => {\t\n\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(fs.pathExistsSync(path), false);\n\tassert.strictEqual(res.body.result, true);\n\tassert.strictEqual(typeof res.body.filename, 'string');\n\tassert.strictEqual(res.body.path, path);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "12fa0c90-2c41-45a6-b514-19ea8eb27151",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "12fa0c90-2c41-45a6-b514-19ea8eb27151"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "93fc016b-0af4-454c-969f-c55408f4fd4c",
            "title": "delete not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/deleteFiles delete not existing file should return 404",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = tmpDir+'/fileToDelete.txt'\n\nlet opt = getHttpOptions('POST', '/_plugin/filesystem/deleteFiles')\nopt.body = {\n\tpath: path\n}\nif (fs.pathExistsSync(path))\n\tfs.unlinkSync(path)\n\t\t\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "2a15560a-54a0-450b-8d62-89ee7ab16986",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2a15560a-54a0-450b-8d62-89ee7ab16986"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "eba1123c-34d7-4ea8-92e9-ec3857411f1a",
        "title": "/_plugin/filesystem/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
        "file": "\\test\\worker\\20-plugin-filesystem.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "e2729105-9845-4f0d-b611-e1af68f09d8a",
            "title": "Download existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/javascript; charset=UTF-8');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');\n\tassert.strictEqual(res.headers['content-length'] > 0 , true, 'content-type > 0');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "f55b2a1e-bae8-4481-8960-90966a64fefe",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f55b2a1e-bae8-4481-8960-90966a64fefe"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "da25ba56-837b-4178-b6dc-ec80f5921a08",
            "title": "Download existing file - compress=false",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download existing file - compress=false should return 200",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'&compress=false'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\t/*assert.strictEqual(res.headers['content-type'], 'application/javascript');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"index.js\"');*/\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "03ef818f-281e-43de-9255-59f0aac5ce7f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "03ef818f-281e-43de-9255-59f0aac5ce7f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "c65d39f5-0102-4ece-ab1e-ec41438f9118",
            "title": "Download file - file does not exists",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 404",
                "fullTitle": "/_plugin/filesystem/download Download file - file does not exists should return 404",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceFile+'/balbalba'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nexecRequestExpectError(opt, done, 404)",
                "err": {},
                "isRoot": false,
                "uuid": "fe0eeb6c-828a-4771-95b1-8ae6eb7faa79",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fe0eeb6c-828a-4771-95b1-8ae6eb7faa79"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3f0f1883-f257-4517-b8bf-06f6df7c2dcf",
            "title": "Download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\20-plugin-filesystem.js",
            "file": "\\test\\worker\\20-plugin-filesystem.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/filesystem/download Download directory should return 200",
                "timedOut": false,
                "duration": 1587,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let query = 'path='+sourceDir\nlet dest = tmpDir+'/downloadZip.zip'\nlet opt = getHttpOptions('GET', '/_plugin/filesystem/download?'+query)\nopt.json = false\nif (fs.pathExistsSync(dest))\n\tfs.unlinkSync(dest)\nlet destFileStream = fs.createWriteStream(dest);\nrequest( opt , (error, res, body) => {\n\tassert.strictEqual(res.statusCode, 200);\n\tassert.strictEqual(typeof res.body, 'string');\n\tassert.strictEqual(res.headers['content-type'], 'application/zip');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"dist.zip\"');\t\t\n})\n.pipe(destFileStream)\n\t\t    .on('finish', () => {\n\n\t\t    \tif (fs.pathExistsSync(dest) && (fs.statSync(dest).size > 0))\n\t\t       \t\tdone();\t\t \t      \n\t\t       \telse\n\t\t       \t\tdone('Downloaded file does not exists or is empty');\t\t \t      \n\t\t    })\n\t\t    .on('error', (error) => {\n\t\t        done(error);\n\t\t    })",
                "err": {},
                "isRoot": false,
                "uuid": "cb6d136a-58d6-4240-89b3-549c6f9705ea",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cb6d136a-58d6-4240-89b3-549c6f9705ea"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1587,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d2e0e729-f717-452c-b738-0d86577ef6c3",
        "title": "plugin-http",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
        "file": "\\test\\worker\\30-plugin-http.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0484eadf-3aa4-461b-a584-a2555535c986",
            "title": "POST /_plugin/http/request",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "plugin-http POST /_plugin/http/request should return 200",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(typeof res.body.body, 'object');\n\tassert.strictEqual(res.body.body.status, 0);\n\texpect(res.body.status).to.equal(200);\n\tassert.strictEqual(typeof res.body.body.version, 'string');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "e6323b81-9e65-47d9-9258-35ec6218cdb5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e6323b81-9e65-47d9-9258-35ec6218cdb5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "789e7d34-397d-4015-a0da-7984eec1df3b",
            "title": "POST /_plugin/http/request to unkown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown host should return 200 - content is error",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+'blablabla:'+PORT+'/api/checkAgent',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, true);\n\tassert.strictEqual(typeof res.body.error !== 'undefined', true);\n\tassert.strictEqual(res.body.status, null);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "a8f2baf6-1643-4111-9a22-3ea6b5460248",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a8f2baf6-1643-4111-9a22-3ea6b5460248"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 11,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "727cc44b-7ec0-4b1a-80c9-f20dd8690dd4",
            "title": "POST /_plugin/http/request to unkown url",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\30-plugin-http.js",
            "file": "\\test\\worker\\30-plugin-http.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200 - content is error 404",
                "fullTitle": "plugin-http POST /_plugin/http/request to unkown url should return 200 - content is error 404",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/http/request')\nopt.body = {\n\turl: 'http://'+HOST+':'+PORT+'/api/checkAgentBLABLABLA',\n\tmethod: 'GET',\n\tjson: true\n}\nrequest( opt )\n.then( (res) => {\t\t\n\t//console.log(res.body)\t\n\texpect(res.statusCode).to.equal(200);\n\tassert.strictEqual(typeof res.body, 'object');\n\tassert.strictEqual(res.body.isError, false);\n\tassert.strictEqual(res.body.error, null);\n\tassert.strictEqual(res.body.status, 404);\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "7c9f51fd-563e-4577-a10e-44caadab2227",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7c9f51fd-563e-4577-a10e-44caadab2227"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ff0ae1d5-df70-4c86-8531-d48649de0110",
        "title": "plugin-metrics",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
        "file": "\\test\\worker\\40-plugin-metrics.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "bd6b9d68-9846-488f-9b06-4e47c5742f5c",
            "title": "GET metrics getInfos",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics getInfos should return object",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual( _.isArray(res.body.metrics) , true, 'body.metrics is not array')\t\t\n\t\t\t\tassert.strictEqual( res.body.metrics.length , 5, 'body.metrics length is not 5')\t\t\n\t\t\t\tlet cpuMetric =  res.body.metrics[0]\n\t\t\t\tassert.strictEqual( cpuMetric.name , 'cpu')\t\t\t\n\t\t\t\tassert.strictEqual( cpuMetric.url , 'http://'+HOST+':'+PORT+'/_plugin/metrics/cpu')\t\t\t\n\t\t\t\tassert.strictEqual( _.isArray(cpuMetric.args) , true, 'body.metrics[0].args is not array')\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "d6993e21-2dd2-4300-b0cc-d1c51054c5ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d6993e21-2dd2-4300-b0cc-d1c51054c5ed"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "10c8d6c0-9a05-4667-b3af-77700499ddcd",
            "title": "GET metrics systemInfo",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics systemInfo should return object",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.release == 'string', true, \"'release' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.uptime == 'number', true, \"'uptime' property is not number'\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.osType == 'string', true, \"'osType' property is not number'\")\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "b4f01c06-c76a-49dc-9f1a-7c95dd1ec2a2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b4f01c06-c76a-49dc-9f1a-7c95dd1ec2a2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 20,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7c042c59-40cf-4fae-8bb1-25d5a39a180a",
            "title": "GET metrics systemInfo format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics systemInfo format=nagios should return string",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/systemInfo?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 0 )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "fce5bf40-1c7b-4043-bfb8-abb8a3e173b6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fce5bf40-1c7b-4043-bfb8-abb8a3e173b6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "72958eee-27bb-4d56-8bef-2bd617e1630c",
            "title": "GET metrics cpu",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics cpu should return object",
                "timedOut": false,
                "duration": 1005,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.ellapsed == 'number', true, \"'ellapsed' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.percentageCPU == 'number', true, \"'percentageCPU' property is not number'\")\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "167771bf-685d-4ec4-a1d7-8b91cbfbc2d7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "167771bf-685d-4ec4-a1d7-8b91cbfbc2d7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1005,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cac13f97-acde-4b9b-a184-62fa17b0904e",
            "title": "GET metrics cpu format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics cpu format=nagios should return string",
                "timedOut": false,
                "duration": 1006,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3f2944b1-2668-4240-8615-36fedf5edc74",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3f2944b1-2668-4240-8615-36fedf5edc74"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1006,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "86039a73-05e8-42b0-b47a-4855743614fe",
            "title": "GET metrics cpu warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics cpu warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1007,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=10&critic=5&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, false, 3 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "f738830b-7b45-4774-9549-35bd5dbd8465",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "f738830b-7b45-4774-9549-35bd5dbd8465"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1007,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b6e59ea4-01c6-4bd9-a1e2-41f3391ff599",
            "title": "GET metrics cpu warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1010,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "b7997c2d-82be-4acf-a185-cb6d0de04c24",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b7997c2d-82be-4acf-a185-cb6d0de04c24"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1010,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "58cdd741-5820-4716-a561-40c8869d7763",
            "title": "GET metrics cpu warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics cpu warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 1010,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/cpu?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "50e09afe-2ae7-4d44-a55e-7a0c550ea0ca",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "50e09afe-2ae7-4d44-a55e-7a0c550ea0ca"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1010,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9d23d40b-e049-46f0-b719-22c633d1f194",
            "title": "GET metrics memory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics memory should return object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedPercent == 'number', true, \"'usedPercent' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.usedMem == 'number', true, \"'usedMem' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.totalMem == 'number', true, \"'totalMem' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "bbf30aea-4985-4c4a-aec3-29399e2ec325",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "bbf30aea-4985-4c4a-aec3-29399e2ec325"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6084e539-2f98-4b2f-b816-cff0ce526897",
            "title": "GET metrics memory format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics memory format=nagios should return string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ac94a425-f5d9-484c-89be-9ea42c265a83",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ac94a425-f5d9-484c-89be-9ea42c265a83"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "86005621-988d-4102-a444-8b86df85f328",
            "title": "GET metrics memory warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics memory warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "cb74bda4-2538-4be1-8a9e-0b04216c4784",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cb74bda4-2538-4be1-8a9e-0b04216c4784"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "23068c3d-512a-42c9-ac99-0ea35ebf6b60",
            "title": "GET metrics memory warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "fa8d9aac-3ff5-4c3d-9a0d-dc46f1081e7e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fa8d9aac-3ff5-4c3d-9a0d-dc46f1081e7e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "3faeb603-cbcc-4595-9aea-1fceb9314e2d",
            "title": "GET metrics memory warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics memory warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/memory?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "a7c38590-063e-42bf-9c1e-c81d1dca8060",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a7c38590-063e-42bf-9c1e-c81d1dca8060"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e5156ee6-2722-45e0-909a-195fb7a003de",
            "title": "GET metrics load",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics load should return object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\tassert.strictEqual(typeof res.body.load1 == 'number', true, \"'load1' property is not number\")\t\n\t\t\t\tassert.strictEqual(typeof res.body.load5 == 'number', true, \"'load5' property is not number'\")\t\t\t\t\t\n\t\t\t\tassert.strictEqual(typeof res.body.load15 == 'number', true, \"'load15' property is not number'\")\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "3194c9b9-6055-430d-aece-be395cc924dd",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3194c9b9-6055-430d-aece-be395cc924dd"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "fa60cce8-7950-4c18-92f3-36ad8921bbd1",
            "title": "GET metrics load format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics load format=nagios should return string",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "ac0199b3-7828-4864-9e24-7402f0370995",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ac0199b3-7828-4864-9e24-7402f0370995"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5700040f-861e-4c19-b243-9fe36fab36dd",
            "title": "GET metrics load warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "21f9dadb-3714-4811-bbe9-b44d5c269a74",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "21f9dadb-3714-4811-bbe9-b44d5c269a74"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "fc8923b3-613a-47af-8e22-34be011dc6ff",
            "title": "GET metrics load warn1=10 critic1=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn1=10 critic1=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn1=10&critic1=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "284ac22a-e938-40c1-a70d-5d92a172a184",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "284ac22a-e938-40c1-a70d-5d92a172a184"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a178a8a3-6877-462f-a480-206d137fa525",
            "title": "GET metrics load warn5=10 critic5=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn5=10 critic5=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn5=10&critic5=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "dbad8f1f-9a28-44b5-9925-516606c7a6c8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dbad8f1f-9a28-44b5-9925-516606c7a6c8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "34406fe7-a381-47d4-96ee-77f991bf28b8",
            "title": "GET metrics load warn15=10 critic15=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics load warn15=10 critic15=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn15=10&critic15=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "886639db-2ab6-48d7-948e-9861b444bceb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "886639db-2ab6-48d7-948e-9861b444bceb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "dfe69d3f-6453-4fe6-afed-75523a4816d9",
            "title": "GET metrics load warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "16b6726a-bc26-4720-baa1-40620f07cda1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "16b6726a-bc26-4720-baa1-40620f07cda1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "4249348f-2e75-4f98-905a-f16a252e953f",
            "title": "GET metrics load warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics load warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/load?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "cb0a477c-f25a-479b-97a6-b0545c45fbee",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "cb0a477c-f25a-479b-97a6-b0545c45fbee"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "832f6bf5-6e21-4581-8ca4-5a302300a7cf",
            "title": "GET metrics disks",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return object",
                "fullTitle": "plugin-metrics GET metrics disks should return object",
                "timedOut": false,
                "duration": 516,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\n\t\t\t\texpect(res.statusCode).to.equal(200);\n\t\t\t\tassert.strictEqual(typeof res.body, 'object')\t\n\t\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tC:: {\n\t\t\t\t\tname: \"C:\",\n\t\t\t\t\tfree: 5695320064,\n\t\t\t\t\ttotal: 128033222656,\n\t\t\t\t\tused: 122337902592,\n\t\t\t\t\ttotalGO: 119.2,\n\t\t\t\t\tusedGO: 113.9,\n\t\t\t\t\tfreeGO: 5.3,\n\t\t\t\t\tusedPercent: 96,\n\t\t\t\t\tisValid: true\n\t\t\t\t\t},\n\t\t\t\t*/\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "14353504-febf-4251-abd0-683ec48f544a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "14353504-febf-4251-abd0-683ec48f544a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 516,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "9fe8145e-999a-47f7-afa8-eb5e443e7ae1",
            "title": "GET metrics disks format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return string",
                "fullTitle": "plugin-metrics GET metrics disks format=nagios should return string",
                "timedOut": false,
                "duration": 449,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\t\n\t\t\t\tcheckNagiosResult( res, true )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "9eb79296-2faa-46dc-a8c7-6718b62c6df4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9eb79296-2faa-46dc-a8c7-6718b62c6df4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 449,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b70b93da-62cf-40d6-ac0b-2dc74e10473c",
            "title": "GET metrics disks warn=10 critic=5 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks warn=10 critic=5 format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 484,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=10&critic=5&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "e3431988-c2be-4e82-8c4e-c51b0bdf6eeb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e3431988-c2be-4e82-8c4e-c51b0bdf6eeb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 484,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "2d47677b-997e-41c3-a2d2-88dcd59b8412",
            "title": "GET metrics disks fs=blablabla format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 3",
                "fullTitle": "plugin-metrics GET metrics disks fs=blablabla format=nagios should return currentState 3",
                "timedOut": false,
                "duration": 452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?fs=blablabla&format=nagios') )\n.then( (res) => {\t\t\n\tcheckNagiosResult( res, false, 3)\t\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "7c16c0fd-5524-436e-b2b0-ab2e9bf88598",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7c16c0fd-5524-436e-b2b0-ab2e9bf88598"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 452,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6f1b67ae-283a-46c9-836f-568d962927cd",
            "title": "GET metrics disks warn=0 critic=0 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 2",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=0 format=nagios should return currentState 2",
                "timedOut": false,
                "duration": 493,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=0&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 2 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "9de432e8-1e3f-46c7-b39f-8e63f68ade2b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9de432e8-1e3f-46c7-b39f-8e63f68ade2b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 493,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "56c1edad-7ace-4ff3-8b26-e7c1b2e9bc26",
            "title": "GET metrics disks warn=0 critic=100 format=nagios",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\40-plugin-metrics.js",
            "file": "\\test\\worker\\40-plugin-metrics.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return currentState 1",
                "fullTitle": "plugin-metrics GET metrics disks warn=0 critic=100 format=nagios should return currentState 1",
                "timedOut": false,
                "duration": 490,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request( getHttpOptions('GET', '/_plugin/metrics/disks?warn=0&critic=100&format=nagios') )\n\t\t\t.then( (res) => {\t\t\n\t\t\t\tcheckNagiosResult( res, true, 1 )\t\t\t\t\t\n\t\t\t\tdone();\t\t\t\t\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\tdone(err)\n\t\t\t})",
                "err": {},
                "isRoot": false,
                "uuid": "0ce06a25-2bdc-4b03-a9af-43ec304f36e2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0ce06a25-2bdc-4b03-a9af-43ec304f36e2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 490,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "6df28d95-209b-4cbf-8802-dcee12443083",
        "title": "GET /_plugin/ssh",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 404",
            "fullTitle": "GET /_plugin/ssh should return 404",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let opt = getHttpOptions('GET', '/_plugin/ssh')\nexecRequestExpectError(opt, done, 404)",
            "err": {},
            "isRoot": false,
            "uuid": "4cc4724c-c536-4a96-80d5-0f132b5d4091",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4cc4724c-c536-4a96-80d5-0f132b5d4091"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "11d2c86f-f53c-4511-b27d-3e32f3dae6f2",
        "title": "/_plugin/ssh/upload",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d3304e8c-4f7e-49b7-8fd1-de30fad283fd",
            "title": "upload file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/upload upload file should return 200",
                "timedOut": false,
                "duration": 983,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/tmp/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        },\n        file2: {\n            value: fs.createReadStream(sourceDir+'/Application.js'),\n            options: {\n                filename: 'Application.js',\n                contentType: 'application/javascript'\n            }\n        }\n    },\n\t\t\t\n\trequest( opt )\n\t.then( (res) => {\t\n\t\tcheckUploadResult( res, sourceFile, path  )\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "750f9ccd-b56f-4af4-a7d4-bf348c750d0e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "750f9ccd-b56f-4af4-a7d4-bf348c750d0e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 983,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "985038e9-75be-421d-8cfc-47f92d4b6c03",
            "title": "upload file in incorrect path",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/upload upload file in incorrect path should return 400",
                "timedOut": false,
                "duration": 462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let path = '/blablabla/upload.txt'\n\tlet opt = getHttpOptions('POST', '/_plugin/ssh/upload?path='+path+'&port='+SSH_HOST_PORT+'&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD)\n\t\n\topt.formData = {\n        // Like <input type=\"text\" name=\"name\">\n        name: sourceFileName,\n        // Like <input type=\"file\" name=\"file\">\n        file1: {\n            value: fs.createReadStream(sourceFile),\n            options: {\n                filename: sourceFileName,\n                contentType: 'application/javascript'\n            }\n        }\n    }\n\t\t\t\n\texecRequestExpectError( opt, done, 400 )",
                "err": {},
                "isRoot": false,
                "uuid": "955a650c-99e5-4d0f-85ee-f1d2d44e927f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "955a650c-99e5-4d0f-85ee-f1d2d44e927f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 462,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1b6ec9d3-b931-4877-96c7-54283cb05cd3",
        "title": "/_plugin/ssh with password",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "a443f8b6-e59d-4bec-b737-9612bf48b200",
            "title": "exec script on unknown host",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script on unknown host should return 500",
                "timedOut": false,
                "duration": 2259,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: 'blablabla',\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-socket')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "caa35424-2000-4dc5-8e48-878dcde50ace",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "caa35424-2000-4dc5-8e48-878dcde50ace"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2259,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "e88f7b0c-f44a-4cac-9c39-f3aee50bb745",
            "title": "exec script with incorrect password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with password exec script with incorrect password should return 500",
                "timedOut": false,
                "duration": 2753,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "e9fadbe6-963d-43b8-9077-e1497391e884",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e9fadbe6-963d-43b8-9077-e1497391e884"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2753,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "745d686a-f099-4e28-a885-45bef9a1e3b4",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script should return 200",
                "timedOut": false,
                "duration": 305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "57f94e1e-32f5-462f-97da-c3bf6c1d689a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "57f94e1e-32f5-462f-97da-c3bf6c1d689a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 305,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "16aaa9e2-53d5-45b1-bb5b-b82b15ff8c79",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with password exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassword: SSH_HOST_PASSWORD\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "5f3ac2c3-a91b-4518-94e1-f29b3d020206",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5f3ac2c3-a91b-4518-94e1-f29b3d020206"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 290,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "9a540d10-115b-4f18-a8a2-a1ddbc3054be",
        "title": "/_plugin/ssh with remote key",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "88ed5f0d-ebe4-4198-8400-8413dedb72e2",
            "title": "exec script with incorrect passphrase",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh with remote key exec script with incorrect passphrase should return 500",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"ls -l\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: 'blablabla'\n\t}\n    \n\texecRequestExpectError(opt, null, 500)\n\t.then( res => {\n\t\tcheckSshError(res, 'SshError', false, 'client-authentication')\n\t\tdone()\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "8119a761-f224-4a8c-a9b5-58078f565a2d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "8119a761-f224-4a8c-a9b5-58078f565a2d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 25000
          },
          {
            "uuid": "a001a4a4-7e71-4cbf-aa80-50b8c57a786d",
            "title": "exec script",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script should return 200",
                "timedOut": false,
                "duration": 818,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"echo $USER\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stdout.trim(), SSH_HOST_USERNAME, 'stdout != '+SSH_HOST_USERNAME);\n\t\tassert.strictEqual(res.body.stderr, '', 'stderr is not empty');\n\t\tassert.strictEqual(res.body.exitCode, 0, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "45b49a82-4ca4-481d-9153-f95ab587a599",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "45b49a82-4ca4-481d-9153-f95ab587a599"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 818,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "cf8ac49f-558e-4ddd-b693-d783230f0179",
            "title": "exec script with stderr and exitCode=1",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh with remote key exec script with stderr and exitCode=1 should return 200",
                "timedOut": false,
                "duration": 772,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let opt = getHttpOptions('POST', '/_plugin/ssh/exec')\n\t\n\topt.body = {\n\t\tscript:  \"cd /blablabla\",\n\t\thost: SSH_HOST,\n\t\tport: SSH_HOST_PORT,\n\t\tusername: SSH_HOST_USERNAME,\n\t\tpassphrase: SSH_HOST_PASSPHRASE\n\t}\n    \n    request( opt )\n\t.then( (res) => {\t\n\t\n\t\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\t\tassert.strictEqual(res.body.stderr.trim() !== '', true, 'stderr is empty');\n\t\tassert.strictEqual(res.body.exitCode, 1, 'exitCode != 0');\n\t\tdone();\t\t\t\t\n\t})\n\t.catch( err => {\n\t\tdone(err)\n\t})",
                "err": {},
                "isRoot": false,
                "uuid": "6cfc48cb-febd-4c9c-932d-50b5e1f0ce47",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6cfc48cb-febd-4c9c-932d-50b5e1f0ce47"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 772,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b9136cae-c65f-4320-a608-3551a0934d9a",
        "title": "/_plugin/ssh/download",
        "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
        "file": "\\test\\worker\\50-plugin-ssh.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "cc1e2aeb-96db-4256-966d-1ed4878479d1",
            "title": "download with password",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 200",
                "fullTitle": "/_plugin/ssh/download download with password should return 200",
                "timedOut": false,
                "duration": 447,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/upload.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nrequest( opt )\n.then( (res) => {\t\n\tassert.strictEqual(res.statusCode, 200, 'status is not 200');\n\tassert.strictEqual(res.headers['content-disposition'], 'attachment; filename=\"upload.txt\"', 'Content-Disposition is not attachment');\n\tdone();\t\t\t\t\n})\n.catch( err => {\n\tdone(err)\n})",
                "err": {},
                "isRoot": false,
                "uuid": "18f63c6c-ff4a-40fe-8a2b-aa3a41c50f85",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "18f63c6c-ff4a-40fe-8a2b-aa3a41c50f85"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 447,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "41a5d0a4-18ac-4474-8bfd-c36e13a1af65",
            "title": "download not existing file",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 400",
                "fullTitle": "/_plugin/ssh/download download not existing file should return 400",
                "timedOut": false,
                "duration": 384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp/blablablaff.txt&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 400)",
                "err": {},
                "isRoot": false,
                "uuid": "e3baf58c-d10b-4e0d-bb06-c434be1eadd8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e3baf58c-d10b-4e0d-bb06-c434be1eadd8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 384,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1313ca19-93ad-47a2-b561-dd9c2fb24cbc",
            "title": "download directory",
            "fullFile": "D:\\projets\\mr-agent\\test\\worker\\50-plugin-ssh.js",
            "file": "\\test\\worker\\50-plugin-ssh.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return 500",
                "fullTitle": "/_plugin/ssh/download download directory should return 500",
                "timedOut": false,
                "duration": 383,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let params = 'path=/tmp&host='+SSH_HOST+'&username='+SSH_HOST_USERNAME+'&password='+SSH_HOST_PASSWORD+'&port='+SSH_HOST_PORT\nlet opt = getHttpOptions('GET', '/_plugin/ssh/download?'+params)\n\nexecRequestExpectError(opt, done, 500)",
                "err": {},
                "isRoot": false,
                "uuid": "d1a0f500-1c94-4db5-af7e-bc06542f4f8a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d1a0f500-1c94-4db5-af7e-bc06542f4f8a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 383,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}